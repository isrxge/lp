[{"G:\\vercel\\lpc_landingpage\\src\\app\\about\\page.tsx":"1","G:\\vercel\\lpc_landingpage\\src\\app\\admin\\page.tsx":"2","G:\\vercel\\lpc_landingpage\\src\\app\\api\\auth\\[...nextauth]\\route.js":"3","G:\\vercel\\lpc_landingpage\\src\\app\\api\\banner\\route.js":"4","G:\\vercel\\lpc_landingpage\\src\\app\\api\\company\\route.js":"5","G:\\vercel\\lpc_landingpage\\src\\app\\api\\contact\\route.js":"6","G:\\vercel\\lpc_landingpage\\src\\app\\api\\customer\\route.js":"7","G:\\vercel\\lpc_landingpage\\src\\app\\api\\findById\\route.js":"8","G:\\vercel\\lpc_landingpage\\src\\app\\api\\getall\\new\\route.js":"9","G:\\vercel\\lpc_landingpage\\src\\app\\api\\new\\route.js":"10","G:\\vercel\\lpc_landingpage\\src\\app\\api\\partner\\route.js":"11","G:\\vercel\\lpc_landingpage\\src\\app\\api\\product\\route.js":"12","G:\\vercel\\lpc_landingpage\\src\\app\\api\\sendMessage\\route.js":"13","G:\\vercel\\lpc_landingpage\\src\\app\\api\\user\\route.js":"14","G:\\vercel\\lpc_landingpage\\src\\app\\blog\\page\\[page]\\page.tsx":"15","G:\\vercel\\lpc_landingpage\\src\\app\\blog\\page.tsx":"16","G:\\vercel\\lpc_landingpage\\src\\app\\blog\\[single]\\page.tsx":"17","G:\\vercel\\lpc_landingpage\\src\\app\\categories\\page.tsx":"18","G:\\vercel\\lpc_landingpage\\src\\app\\categories\\[single]\\page.tsx":"19","G:\\vercel\\lpc_landingpage\\src\\app\\contact\\page.tsx":"20","G:\\vercel\\lpc_landingpage\\src\\app\\layout.tsx":"21","G:\\vercel\\lpc_landingpage\\src\\app\\login\\page.tsx":"22","G:\\vercel\\lpc_landingpage\\src\\app\\not-found.tsx":"23","G:\\vercel\\lpc_landingpage\\src\\app\\page.tsx":"24","G:\\vercel\\lpc_landingpage\\src\\app\\provider.js":"25","G:\\vercel\\lpc_landingpage\\src\\app\\search\\page.tsx":"26","G:\\vercel\\lpc_landingpage\\src\\app\\Service\\page.tsx":"27","G:\\vercel\\lpc_landingpage\\src\\app\\Service\\[id]\\page.tsx":"28","G:\\vercel\\lpc_landingpage\\src\\app\\Solution\\page.tsx":"29","G:\\vercel\\lpc_landingpage\\src\\app\\Solution\\[id]\\page.tsx":"30","G:\\vercel\\lpc_landingpage\\src\\app\\Solution\\[id]\\[idcontent]\\page.tsx":"31","G:\\vercel\\lpc_landingpage\\src\\app\\tags\\page.tsx":"32","G:\\vercel\\lpc_landingpage\\src\\app\\tags\\[single]\\page.tsx":"33","G:\\vercel\\lpc_landingpage\\src\\feature\\changeLanguage\\changeLanguageSlice.tsx":"34","G:\\vercel\\lpc_landingpage\\src\\feature\\data\\companySlice.tsx":"35","G:\\vercel\\lpc_landingpage\\src\\feature\\data\\customerSlice.tsx":"36","G:\\vercel\\lpc_landingpage\\src\\feature\\data\\newSlice.tsx":"37","G:\\vercel\\lpc_landingpage\\src\\feature\\data\\partnerSlice.tsx":"38","G:\\vercel\\lpc_landingpage\\src\\feature\\data\\productSlice.tsx":"39","G:\\vercel\\lpc_landingpage\\src\\feature\\login\\loginSlice.tsx":"40","G:\\vercel\\lpc_landingpage\\src\\feature\\search\\searchSlice.tsx":"41","G:\\vercel\\lpc_landingpage\\src\\hooks\\useLoadMore.ts":"42","G:\\vercel\\lpc_landingpage\\src\\hooks\\useOs.ts":"43","G:\\vercel\\lpc_landingpage\\src\\hooks\\useTooltip.ts":"44","G:\\vercel\\lpc_landingpage\\src\\hooks\\useWindow.ts":"45","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\banner\\bannerTable.tsx":"46","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\banner\\createBanner.tsx":"47","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\banner\\updateBanner.tsx":"48","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\contact\\addContact.tsx":"49","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\contact\\tableContact.tsx":"50","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\customers\\createCustomer.tsx":"51","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\customers\\customerTable.tsx":"52","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\customers\\updateCustomer.tsx":"53","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\message\\messageTable.tsx":"54","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\news\\createNew.tsx":"55","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\news\\newTable.tsx":"56","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\news\\updateNew.tsx":"57","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\partners\\createPartner.tsx":"58","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\partners\\partnerTable.tsx":"59","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\partners\\updatePartner.tsx":"60","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\contentTable.tsx":"61","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\createContent.tsx":"62","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\createProduct.tsx":"63","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\productTable.tsx":"64","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\updateContent.tsx":"65","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\updateProduct.tsx":"66","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\RichTextEditor.tsx":"67","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\banner.tsx":"68","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\bannerContent.tsx":"69","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\BlogCard.tsx":"70","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Breadcrumbs.tsx":"71","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\carousel.tsx":"72","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\companyInfo.tsx":"73","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\customerList.tsx":"74","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\customerListForAbout.tsx":"75","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Disqus.tsx":"76","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\googleMap.js":"77","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Logo.tsx":"78","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\map.js":"79","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\newItem.tsx":"80","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\newList.tsx":"81","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Pagination.tsx":"82","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\partnerList.tsx":"83","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\partnerListForAbout.tsx":"84","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\popup.tsx":"85","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\productCard.tsx":"86","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\productList.tsx":"87","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\scrollToTopButton.tsx":"88","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\ServiceCard.tsx":"89","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Share.tsx":"90","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Social.tsx":"91","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\ThemeSwitcher.tsx":"92","G:\\vercel\\lpc_landingpage\\src\\layouts\\helpers\\DynamicIcon.tsx":"93","G:\\vercel\\lpc_landingpage\\src\\layouts\\helpers\\ImageFallback.tsx":"94","G:\\vercel\\lpc_landingpage\\src\\layouts\\helpers\\MDXContent.tsx":"95","G:\\vercel\\lpc_landingpage\\src\\layouts\\helpers\\TwSizeIndicator.tsx":"96","G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\CallToAction.tsx":"97","G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\Footer.tsx":"98","G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\Header.tsx":"99","G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\PageHeader.tsx":"100","G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\PostSidebar.tsx":"101","G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\Providers.tsx":"102","G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\SeoMeta.tsx":"103","G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\Testimonials.tsx":"104","G:\\vercel\\lpc_landingpage\\src\\layouts\\Search.tsx":"105","G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Accordion.tsx":"106","G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\all.tsx":"107","G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Button.tsx":"108","G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Notice.tsx":"109","G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Tab.tsx":"110","G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Tabs.tsx":"111","G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Video.tsx":"112","G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Youtube.tsx":"113","G:\\vercel\\lpc_landingpage\\src\\lib\\contentParser.ts":"114","G:\\vercel\\lpc_landingpage\\src\\lib\\createData.js":"115","G:\\vercel\\lpc_landingpage\\src\\lib\\loadData.ts":"116","G:\\vercel\\lpc_landingpage\\src\\lib\\loginAuth.js":"117","G:\\vercel\\lpc_landingpage\\src\\lib\\mongodb.js":"118","G:\\vercel\\lpc_landingpage\\src\\lib\\taxonomyParser.ts":"119","G:\\vercel\\lpc_landingpage\\src\\lib\\updateData.js":"120","G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\dateFormat.ts":"121","G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\readingTime.ts":"122","G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\similarItems.ts":"123","G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\sortFunctions.ts":"124","G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\taxonomyFilter.ts":"125","G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\textConverter.ts":"126","G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\use-scroll.ts":"127","G:\\vercel\\lpc_landingpage\\src\\models\\banner.js":"128","G:\\vercel\\lpc_landingpage\\src\\models\\company.js":"129","G:\\vercel\\lpc_landingpage\\src\\models\\contact.js":"130","G:\\vercel\\lpc_landingpage\\src\\models\\customer.js":"131","G:\\vercel\\lpc_landingpage\\src\\models\\message.js":"132","G:\\vercel\\lpc_landingpage\\src\\models\\new.js":"133","G:\\vercel\\lpc_landingpage\\src\\models\\partner.js":"134","G:\\vercel\\lpc_landingpage\\src\\models\\product.js":"135","G:\\vercel\\lpc_landingpage\\src\\models\\user.js":"136","G:\\vercel\\lpc_landingpage\\src\\store\\store.tsx":"137","G:\\vercel\\lpc_landingpage\\src\\types\\index.d.ts":"138"},{"size":1020,"mtime":1693211786604,"results":"139","hashOfConfig":"140"},{"size":12327,"mtime":1693211786605,"results":"141","hashOfConfig":"140"},{"size":175,"mtime":1693211786606,"results":"142","hashOfConfig":"140"},{"size":2395,"mtime":1693211786606,"results":"143","hashOfConfig":"140"},{"size":1934,"mtime":1693211786607,"results":"144","hashOfConfig":"140"},{"size":2622,"mtime":1693211786607,"results":"145","hashOfConfig":"140"},{"size":2229,"mtime":1693211786608,"results":"146","hashOfConfig":"140"},{"size":1029,"mtime":1693211786608,"results":"147","hashOfConfig":"140"},{"size":652,"mtime":1693211786609,"results":"148","hashOfConfig":"140"},{"size":2769,"mtime":1693211786611,"results":"149","hashOfConfig":"140"},{"size":2235,"mtime":1693211786611,"results":"150","hashOfConfig":"140"},{"size":2860,"mtime":1693211786628,"results":"151","hashOfConfig":"140"},{"size":2384,"mtime":1693211786629,"results":"152","hashOfConfig":"140"},{"size":1389,"mtime":1693211786630,"results":"153","hashOfConfig":"140"},{"size":2335,"mtime":1693211786635,"results":"154","hashOfConfig":"140"},{"size":2937,"mtime":1693211786633,"results":"155","hashOfConfig":"140"},{"size":8570,"mtime":1693211786632,"results":"156","hashOfConfig":"140"},{"size":1610,"mtime":1693211786639,"results":"157","hashOfConfig":"140"},{"size":1358,"mtime":1693211786638,"results":"158","hashOfConfig":"140"},{"size":4712,"mtime":1693211786651,"results":"159","hashOfConfig":"140"},{"size":2389,"mtime":1693212692219,"results":"160","hashOfConfig":"140"},{"size":6691,"mtime":1693211786653,"results":"161","hashOfConfig":"140"},{"size":1459,"mtime":1693211786653,"results":"162","hashOfConfig":"140"},{"size":3937,"mtime":1693211786653,"results":"163","hashOfConfig":"140"},{"size":193,"mtime":1693211786653,"results":"164","hashOfConfig":"140"},{"size":547,"mtime":1693211786654,"results":"165","hashOfConfig":"140"},{"size":4505,"mtime":1693211786601,"results":"166","hashOfConfig":"140"},{"size":6626,"mtime":1693211786601,"results":"167","hashOfConfig":"140"},{"size":6513,"mtime":1693211786603,"results":"168","hashOfConfig":"140"},{"size":5623,"mtime":1693211786603,"results":"169","hashOfConfig":"140"},{"size":8044,"mtime":1693212692218,"results":"170","hashOfConfig":"140"},{"size":1502,"mtime":1693211786655,"results":"171","hashOfConfig":"140"},{"size":1322,"mtime":1693211786655,"results":"172","hashOfConfig":"140"},{"size":855,"mtime":1693211786660,"results":"173","hashOfConfig":"140"},{"size":858,"mtime":1693211786660,"results":"174","hashOfConfig":"140"},{"size":1115,"mtime":1693211786661,"results":"175","hashOfConfig":"140"},{"size":900,"mtime":1693211786661,"results":"176","hashOfConfig":"140"},{"size":943,"mtime":1693211786661,"results":"177","hashOfConfig":"140"},{"size":894,"mtime":1693211786661,"results":"178","hashOfConfig":"140"},{"size":750,"mtime":1693211786662,"results":"179","hashOfConfig":"140"},{"size":719,"mtime":1693211786662,"results":"180","hashOfConfig":"140"},{"size":1086,"mtime":1693211786662,"results":"181","hashOfConfig":"140"},{"size":319,"mtime":1693211786663,"results":"182","hashOfConfig":"140"},{"size":747,"mtime":1693211786663,"results":"183","hashOfConfig":"140"},{"size":575,"mtime":1693211786664,"results":"184","hashOfConfig":"140"},{"size":6726,"mtime":1693211786668,"results":"185","hashOfConfig":"140"},{"size":4351,"mtime":1693211786668,"results":"186","hashOfConfig":"140"},{"size":4241,"mtime":1693211786668,"results":"187","hashOfConfig":"140"},{"size":2634,"mtime":1693211786669,"results":"188","hashOfConfig":"140"},{"size":7441,"mtime":1693211786669,"results":"189","hashOfConfig":"140"},{"size":2829,"mtime":1693211786685,"results":"190","hashOfConfig":"140"},{"size":1474,"mtime":1693211786686,"results":"191","hashOfConfig":"140"},{"size":2823,"mtime":1693211786688,"results":"192","hashOfConfig":"140"},{"size":1243,"mtime":1693211786689,"results":"193","hashOfConfig":"140"},{"size":6983,"mtime":1693211786697,"results":"194","hashOfConfig":"140"},{"size":3710,"mtime":1693211786698,"results":"195","hashOfConfig":"140"},{"size":4379,"mtime":1693211786700,"results":"196","hashOfConfig":"140"},{"size":2824,"mtime":1693211786702,"results":"197","hashOfConfig":"140"},{"size":1396,"mtime":1693211786702,"results":"198","hashOfConfig":"140"},{"size":2813,"mtime":1693211786703,"results":"199","hashOfConfig":"140"},{"size":4488,"mtime":1693211786704,"results":"200","hashOfConfig":"140"},{"size":6506,"mtime":1693211786706,"results":"201","hashOfConfig":"140"},{"size":7125,"mtime":1693211786706,"results":"202","hashOfConfig":"140"},{"size":15873,"mtime":1693211786707,"results":"203","hashOfConfig":"140"},{"size":6689,"mtime":1693211786708,"results":"204","hashOfConfig":"140"},{"size":6754,"mtime":1693211786709,"results":"205","hashOfConfig":"140"},{"size":1194,"mtime":1693211786667,"results":"206","hashOfConfig":"140"},{"size":1289,"mtime":1693212823522,"results":"207","hashOfConfig":"140"},{"size":1843,"mtime":1693211786710,"results":"208","hashOfConfig":"140"},{"size":2125,"mtime":1693211786665,"results":"209","hashOfConfig":"140"},{"size":1559,"mtime":1693211786665,"results":"210","hashOfConfig":"140"},{"size":1260,"mtime":1693211786710,"results":"211","hashOfConfig":"140"},{"size":6745,"mtime":1693211786710,"results":"212","hashOfConfig":"140"},{"size":2433,"mtime":1693211786711,"results":"213","hashOfConfig":"140"},{"size":2267,"mtime":1693211786711,"results":"214","hashOfConfig":"140"},{"size":535,"mtime":1693211786666,"results":"215","hashOfConfig":"140"},{"size":4200,"mtime":1693211786712,"results":"216","hashOfConfig":"140"},{"size":1466,"mtime":1693211786666,"results":"217","hashOfConfig":"140"},{"size":204,"mtime":1693211786712,"results":"218","hashOfConfig":"140"},{"size":1792,"mtime":1693215244671,"results":"219","hashOfConfig":"140"},{"size":2005,"mtime":1693211786713,"results":"220","hashOfConfig":"140"},{"size":4897,"mtime":1693211786666,"results":"221","hashOfConfig":"140"},{"size":2366,"mtime":1693211786713,"results":"222","hashOfConfig":"140"},{"size":2198,"mtime":1693211786713,"results":"223","hashOfConfig":"140"},{"size":1845,"mtime":1693211786713,"results":"224","hashOfConfig":"140"},{"size":1857,"mtime":1693213726936,"results":"225","hashOfConfig":"140"},{"size":2816,"mtime":1693211786714,"results":"226","hashOfConfig":"140"},{"size":1295,"mtime":1693211786714,"results":"227","hashOfConfig":"140"},{"size":1946,"mtime":1693213726874,"results":"228","hashOfConfig":"140"},{"size":1815,"mtime":1693211786666,"results":"229","hashOfConfig":"140"},{"size":744,"mtime":1693211786667,"results":"230","hashOfConfig":"140"},{"size":1580,"mtime":1693211786667,"results":"231","hashOfConfig":"140"},{"size":1327,"mtime":1693211786714,"results":"232","hashOfConfig":"140"},{"size":533,"mtime":1693211786715,"results":"233","hashOfConfig":"140"},{"size":469,"mtime":1693211786723,"results":"234","hashOfConfig":"140"},{"size":779,"mtime":1693211786723,"results":"235","hashOfConfig":"140"},{"size":1939,"mtime":1693211786724,"results":"236","hashOfConfig":"140"},{"size":8190,"mtime":1693211786724,"results":"237","hashOfConfig":"140"},{"size":8341,"mtime":1693211786724,"results":"238","hashOfConfig":"140"},{"size":507,"mtime":1693211786724,"results":"239","hashOfConfig":"140"},{"size":2416,"mtime":1693211786724,"results":"240","hashOfConfig":"140"},{"size":469,"mtime":1693211786725,"results":"241","hashOfConfig":"140"},{"size":2462,"mtime":1693211786725,"results":"242","hashOfConfig":"140"},{"size":5038,"mtime":1693211786725,"results":"243","hashOfConfig":"140"},{"size":5645,"mtime":1693211786665,"results":"244","hashOfConfig":"140"},{"size":1113,"mtime":1693211786726,"results":"245","hashOfConfig":"140"},{"size":353,"mtime":1693211786727,"results":"246","hashOfConfig":"140"},{"size":577,"mtime":1693211786726,"results":"247","hashOfConfig":"140"},{"size":4264,"mtime":1693211786726,"results":"248","hashOfConfig":"140"},{"size":167,"mtime":1693211786726,"results":"249","hashOfConfig":"140"},{"size":1947,"mtime":1693211786726,"results":"250","hashOfConfig":"140"},{"size":525,"mtime":1693211786726,"results":"251","hashOfConfig":"140"},{"size":432,"mtime":1693211786727,"results":"252","hashOfConfig":"140"},{"size":2098,"mtime":1693211786727,"results":"253","hashOfConfig":"140"},{"size":4098,"mtime":1693211786728,"results":"254","hashOfConfig":"140"},{"size":4141,"mtime":1693211786728,"results":"255","hashOfConfig":"140"},{"size":1639,"mtime":1693211786728,"results":"256","hashOfConfig":"140"},{"size":310,"mtime":1693211786728,"results":"257","hashOfConfig":"140"},{"size":1140,"mtime":1693211786728,"results":"258","hashOfConfig":"140"},{"size":4080,"mtime":1693211786729,"results":"259","hashOfConfig":"140"},{"size":244,"mtime":1693211786729,"results":"260","hashOfConfig":"140"},{"size":844,"mtime":1693211786729,"results":"261","hashOfConfig":"140"},{"size":1099,"mtime":1693211786729,"results":"262","hashOfConfig":"140"},{"size":959,"mtime":1693211786730,"results":"263","hashOfConfig":"140"},{"size":319,"mtime":1693211786730,"results":"264","hashOfConfig":"140"},{"size":1397,"mtime":1693211786730,"results":"265","hashOfConfig":"140"},{"size":464,"mtime":1693211786730,"results":"266","hashOfConfig":"140"},{"size":322,"mtime":1693211786731,"results":"267","hashOfConfig":"140"},{"size":1030,"mtime":1693211786731,"results":"268","hashOfConfig":"140"},{"size":399,"mtime":1693211786731,"results":"269","hashOfConfig":"140"},{"size":283,"mtime":1693211786731,"results":"270","hashOfConfig":"140"},{"size":286,"mtime":1693211786731,"results":"271","hashOfConfig":"140"},{"size":418,"mtime":1693211786732,"results":"272","hashOfConfig":"140"},{"size":279,"mtime":1693211786732,"results":"273","hashOfConfig":"140"},{"size":961,"mtime":1693211786732,"results":"274","hashOfConfig":"140"},{"size":440,"mtime":1693211786732,"results":"275","hashOfConfig":"140"},{"size":799,"mtime":1693211786733,"results":"276","hashOfConfig":"140"},{"size":1311,"mtime":1693211786737,"results":"277","hashOfConfig":"140"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8pm21n",{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","suppressedMessages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","suppressedMessages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447"},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463"},{"filePath":"464","messages":"465","suppressedMessages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","suppressedMessages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","suppressedMessages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479"},{"filePath":"480","messages":"481","suppressedMessages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","suppressedMessages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","suppressedMessages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","suppressedMessages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","suppressedMessages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","suppressedMessages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507"},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511"},{"filePath":"512","messages":"513","suppressedMessages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515"},{"filePath":"516","messages":"517","suppressedMessages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","suppressedMessages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","suppressedMessages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","suppressedMessages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534"},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541"},{"filePath":"542","messages":"543","suppressedMessages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545"},{"filePath":"546","messages":"547","suppressedMessages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","suppressedMessages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","suppressedMessages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555"},{"filePath":"556","messages":"557","suppressedMessages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","suppressedMessages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","suppressedMessages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","suppressedMessages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","suppressedMessages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","suppressedMessages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","suppressedMessages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","suppressedMessages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","suppressedMessages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","suppressedMessages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","suppressedMessages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","suppressedMessages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592"},{"filePath":"593","messages":"594","suppressedMessages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","suppressedMessages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"605","messages":"606","suppressedMessages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","suppressedMessages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","suppressedMessages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","suppressedMessages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","suppressedMessages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","suppressedMessages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","suppressedMessages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","suppressedMessages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"629","messages":"630","suppressedMessages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"632","messages":"633","suppressedMessages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","suppressedMessages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","suppressedMessages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","suppressedMessages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","suppressedMessages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","suppressedMessages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","suppressedMessages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","suppressedMessages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","suppressedMessages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","suppressedMessages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","suppressedMessages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","suppressedMessages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","suppressedMessages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"686","messages":"687","suppressedMessages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"689","messages":"690","suppressedMessages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","suppressedMessages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","suppressedMessages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","suppressedMessages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","suppressedMessages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","suppressedMessages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","suppressedMessages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\vercel\\lpc_landingpage\\src\\app\\about\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\admin\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\auth\\[...nextauth]\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\banner\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\company\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\contact\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\customer\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\findById\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\getall\\new\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\new\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\partner\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\product\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\sendMessage\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\api\\user\\route.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\blog\\page\\[page]\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\blog\\page.tsx",["710"],[],"\"use client\";\r\nimport BlogCard from \"@/components/BlogCard\";\r\nimport Pagination from \"@/components/Pagination\";\r\nimport { language } from \"@/feature/changeLanguage/changeLanguageSlice\";\r\nimport Data from \"@/config/data.json\";\r\nimport DataEn from \"@/config/dataEn.json\";\r\nimport PageHeader from \"@/partials/PageHeader\";\r\nimport PostSidebar from \"@/partials/PostSidebar\";\r\nimport SeoMeta from \"@/partials/SeoMeta\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { companyNew, news } from \"@/feature/data/newSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { loadNews } from \"@/lib/loadData\";\r\n// for all regular pages\r\nconst Posts = () => {\r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n  const newInfo = useSelector((rootState) => news(rootState));\r\n\r\n  const newList = newInfo.newData.value.companyNews;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchNew = async () => {\r\n      if (newList.length == 0) {\r\n        const newsCheck = await loadNews(\"\");\r\n        dispatch(companyNew(newsCheck));\r\n      } else {\r\n      }\r\n    };\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const posts: any[] = newInfo.newData.value.companyNews;\r\n  const metadata = {\r\n    title: \"Sp1\",\r\n    meta_title: \"\",\r\n    description: \"this is meta description\",\r\n    image: \"\",\r\n  };\r\n  const categories = [\"Events\", \"Security\"];\r\n  const tags = [\r\n    \"saasbox\",\r\n    \"npm\",\r\n    \"sass\",\r\n    \"pug\",\r\n    \"gulp\",\r\n    \"css\",\r\n    \"bootstrap\",\r\n    \"html5\",\r\n    \"jquery\",\r\n    \"design\",\r\n  ];\r\n  const totalPages = Math.ceil(posts.length / 2);\r\n\r\n  return (\r\n    <>\r\n      <SeoMeta\r\n        title={metadata.title}\r\n        meta_title={metadata.meta_title}\r\n        description={metadata.description}\r\n        image={metadata.image}\r\n      />\r\n      <PageHeader\r\n        title={\r\n          curlanguage.changeLanguage.value == \"en\"\r\n            ? DataEn[\"news\"].name\r\n            : Data[\"news\"].name\r\n        }\r\n      />\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"row gx-5\">\r\n            <div className=\"lg:col-8\">\r\n              <div className=\"row\">\r\n                {posts.map((post: any, index: number) => (\r\n                  <div key={index} className=\"mb-14 md:col-6\">\r\n                    <BlogCard data={post} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <Pagination\r\n                section={\"blog\"}\r\n                currentPage={1}\r\n                totalPages={totalPages}\r\n              />\r\n            </div>\r\n\r\n            <PostSidebar\r\n              categories={categories}\r\n              tags={tags}\r\n              allCategories={posts}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","G:\\vercel\\lpc_landingpage\\src\\app\\blog\\[single]\\page.tsx",["711"],[],"\"use client\";\r\n\r\nimport BlogCard from \"@/components/BlogCard\";\r\n\r\nimport Share from \"@/components/Share\";\r\n\r\nimport { language } from \"@/feature/changeLanguage/changeLanguageSlice\";\r\n\r\nimport ImageFallback from \"@/helpers/ImageFallback\";\r\n\r\nimport dateFormat from \"@/lib/utils/dateFormat\";\r\n\r\nimport similerItems from \"@/lib/utils/similarItems\";\r\n\r\nimport { humanize, markdownify, slugify } from \"@/lib/utils/textConverter\";\r\n\r\nimport SeoMeta from \"@/partials/SeoMeta\";\r\n\r\nimport Link from \"next/link\";\r\n\r\nimport { useRouter, useParams } from \"next/navigation\";\r\n\r\nimport { FaRegClock, FaRegFolder } from \"react-icons/fa/index.js\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Data from \"@/config/data.json\";\r\n\r\nimport DataEn from \"@/config/dataEn.json\";\r\n\r\nimport { companyNew, news } from \"@/feature/data/newSlice\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { loadViaId, loadNews } from \"@/lib/loadData\";\r\n\r\nconst PostSingle = () => {\r\n  const newInfo = useSelector((rootState) => news(rootState));\r\n\r\n  const posts: any[] = newInfo.newData.value.companyNews;\r\n\r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n\r\n  const params: any = useParams();\r\n\r\n  let [data, setData] = useState(\r\n    posts.filter((post) => post._id === params.single)[0] || {},\r\n  );\r\n\r\n  const post = data;\r\n\r\n  let [similarPosts, setSimilarPosts] = useState(\r\n    (Object.keys(data).length != 0 && similerItems(data, posts, data._id!)) ||\r\n      [],\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n\r\n    const fetchNew = async () => {\r\n      if (Object.keys(data).length == 0) {\r\n        if (\r\n          JSON.parse(window.localStorage.getItem(\"newList\") || \"[]\").filter(\r\n            (post) => post._id === params.single,\r\n          )[0] == undefined\r\n        ) {\r\n          const newCheck = await loadViaId(params.single, \"New\");\r\n\r\n          setData(newCheck.data);\r\n\r\n          const newsCheck = await loadNews(\"\");\r\n\r\n          if (Object.keys(newCheck.data).length == 0) {\r\n            router.replace(\"http://localhost:3000/\");\r\n          }\r\n\r\n          dispatch(companyNew(newsCheck));\r\n\r\n          setSimilarPosts(data && similerItems(data, newsCheck, data._id!));\r\n        } else {\r\n          setData(\r\n            JSON.parse(window.localStorage.getItem(\"newList\") || \"[]\").filter(\r\n              (post) => post._id === params.single,\r\n            )[0],\r\n          );\r\n\r\n          setSimilarPosts(\r\n            data &&\r\n              similerItems(\r\n                data,\r\n\r\n                JSON.parse(window.localStorage.getItem(\"newList\") || \"[]\"),\r\n\r\n                data._id!,\r\n              ),\r\n          );\r\n\r\n          if (Object.keys(data).length == 0) {\r\n            debugger;\r\n\r\n            router.replace(\"http://localhost:3000/\");\r\n          }\r\n        }\r\n      } else {\r\n        if (Object.keys(data).length == 0) {\r\n          router.replace(\"http://localhost:3000/\");\r\n        }\r\n\r\n        setSimilarPosts(\r\n          data &&\r\n            similerItems(\r\n              data,\r\n\r\n              posts.length == 0\r\n                ? JSON.parse(window.localStorage.getItem(\"newList\") || \"[]\")\r\n                : posts,\r\n\r\n              data._id!,\r\n            ),\r\n        );\r\n      }\r\n    };\r\n\r\n    // call the function\r\n\r\n    fetchNew()\r\n      // make sure to catch any error\r\n\r\n      .catch(console.error);\r\n  }, [data]);\r\n\r\n  return (\r\n    Object.keys(data).length != 0 && (\r\n      <>\r\n        <SeoMeta\r\n          title={data.title}\r\n          meta_title={data.meta_title}\r\n          description={data.description}\r\n          image={data.image}\r\n        />\r\n\r\n        <section className=\"section pt-7\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-center\">\r\n              <article className=\"lg:col-10\">\r\n                {/* {data.image && (\r\n\r\n                  <div className=\"mb-10\">\r\n\r\n                    <ImageFallback\r\n\r\n                      src={data.image}\r\n\r\n                      height={500}\r\n\r\n                      width={1200}\r\n\r\n                      alt={data.title}\r\n\r\n                      className=\"w-full rounded\"\r\n\r\n                    />\r\n\r\n                  </div>\r\n\r\n                )} */}\r\n\r\n                <div style={{ margin: \"200px\" }}></div>\r\n\r\n                <h1\r\n                  dangerouslySetInnerHTML={markdownify(\r\n                    curlanguage.changeLanguage.value == \"en\"\r\n                      ? data.titleEn\r\n                      : data.title,\r\n                  )}\r\n                  className=\"h3 mb-4\"\r\n                />\r\n\r\n                <ul className=\"mb-4\">\r\n                  <li className=\"mr-4 inline-block\">\r\n                    <FaRegFolder className={\"-mt-1 mr-2 inline-block\"} />\r\n\r\n                    {data.categories?.map((category: string, index: number) => (\r\n                      <Link\r\n                        key={category}\r\n                        href={`/categories/${slugify(category)}`}\r\n                      >\r\n                        {humanize(category)}\r\n\r\n                        {index !== data.categories.length - 1 && \", \"}\r\n                      </Link>\r\n                    ))}\r\n                  </li>\r\n\r\n                  {data.date && (\r\n                    <li className=\"mr-4 inline-block\">\r\n                      <FaRegClock className=\"-mt-1 mr-2 inline-block\" />\r\n\r\n                      {dateFormat(data.date)}\r\n                    </li>\r\n                  )}\r\n                </ul>\r\n\r\n                <div\r\n                  className=\"content mb-10\"\r\n                  dangerouslySetInnerHTML={{\r\n                    __html:\r\n                      curlanguage.changeLanguage.value == \"en\"\r\n                        ? data.contentEn\r\n                        : data.content,\r\n                  }}\r\n                ></div>\r\n\r\n                <div className=\"row items-start justify-between\">\r\n                  <div className=\"mb-10 flex items-center lg:col-5 lg:mb-0\">\r\n                    <h5 className=\"mr-3\">\r\n                      {curlanguage.changeLanguage.value == \"en\"\r\n                        ? DataEn[\"text5\"].name\r\n                        : Data[\"text5\"].name}\r\n                    </h5>\r\n\r\n                    <ul>\r\n                      {data.tags?.map((tag: string) => (\r\n                        <li key={tag} className=\"inline-block\">\r\n                          <Link\r\n                            className=\"m-1 block rounded bg-theme-light px-3 py-1 hover:bg-primary hover:text-white dark:bg-darkmode-theme-light dark:hover:bg-darkmode-primary dark:hover:text-dark\"\r\n                            href={`/tags/${slugify(tag)}`}\r\n                          >\r\n                            {humanize(tag)}\r\n                          </Link>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center lg:col-4\">\r\n                    <h5 className=\"mr-3\">\r\n                      {curlanguage.changeLanguage.value == \"en\"\r\n                        ? DataEn[\"text6\"].name\r\n                        : Data[\"text6\"].name}{\" \"}\r\n                      :\r\n                    </h5>\r\n\r\n                    <Share\r\n                      className=\"social-icons\"\r\n                      title={\r\n                        curlanguage.changeLanguage.value == \"en\"\r\n                          ? data.titleEn\r\n                          : data.title\r\n                      }\r\n                      description={data.description}\r\n                      slug={post.slug!}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* <Disqus className=\"mt-20\" /> */}\r\n              </article>\r\n            </div>\r\n\r\n            {/* <!-- Related posts --> */}\r\n\r\n            <div className=\"section pb-0\">\r\n              <h2 className=\"h3 mb-12 text-center\">\r\n                {curlanguage.changeLanguage.value == \"en\"\r\n                  ? DataEn[\"text7\"].name\r\n                  : Data[\"text7\"].name}\r\n              </h2>\r\n\r\n              <div className=\"row justify-center\">\r\n                {similarPosts &&\r\n                  similarPosts.map((post) => (\r\n                    <div key={post.slug} className=\"lg:col-4\">\r\n                      <BlogCard data={post} />\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nexport default PostSingle;\r\n","G:\\vercel\\lpc_landingpage\\src\\app\\categories\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\categories\\[single]\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\contact\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\layout.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\login\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\not-found.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\provider.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\search\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\Service\\page.tsx",["712"],[],"\"use client\";\r\nimport ProductCard from \"../../layouts/components/productCard\";\r\nimport SeoMeta from \"@/partials/SeoMeta\";\r\nimport Data from \"@/config/data.json\";\r\nimport DataEn from \"@/config/dataEn.json\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { language } from \"@/feature/changeLanguage/changeLanguageSlice\";\r\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\r\nimport { companyProduct, product } from \"@/feature/data/productSlice\";\r\nimport PageHeader from \"@/partials/PageHeader\";\r\nimport { loadProduct } from \"@/lib/loadData\";\r\nimport { useEffect, useState } from \"react\";\r\nconst RegularPages = () => {\r\n  const productInfo = useSelector((rootState) => product(rootState));\r\n  let products = [];\r\n  let [data, setData]: any = useState({});\r\n  products = productInfo.productData.value.product.filter(\r\n    (item: { type: string }) => item.type == \"Service\",\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchSolution = async () => {\r\n      if (products.length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"productList\") || \"[]\").length == 1\r\n        ) {\r\n          const productCheck = await loadProduct();\r\n          dispatch(companyProduct(productCheck));\r\n          setData(\r\n            productCheck.filter(\r\n              (item: { type: string }) => item.type == \"Service\",\r\n            )[0],\r\n          );\r\n        } else {\r\n          setData(\r\n            JSON.parse(localStorage.getItem(\"productList\") || \"[]\").filter(\r\n              (item: { type: string }) => item.type == \"Service\",\r\n            )[0],\r\n          );\r\n        }\r\n      } else {\r\n        setData(products[0]);\r\n      }\r\n    };\r\n    // call the function\r\n    fetchSolution()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n  return data == undefined || Object.keys(data).length == 0 ? (\r\n    <></>\r\n  ) : (\r\n    <section>\r\n      <SeoMeta\r\n        title={data?.title}\r\n        meta_title={data?.meta_title}\r\n        description={data?.title}\r\n        image={data?.image}\r\n      />\r\n\r\n      <PageHeader\r\n        title={\r\n          curlanguage.changeLanguage.value == \"en\"\r\n            ? data?.titleEn.toUpperCase()\r\n            : data?.title.toUpperCase()\r\n        }\r\n      />\r\n\r\n      <div className=\"h-52 w-full bg-cover  bg-[url(https://images.unsplash.com/photo-1504384308090-c894fdcc538d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80)]\">\r\n        <div className=\"flex items-center justify-center h-full w-full bg-gray-900 bg-opacity-50\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-white text-2xl font-semibold uppercase md:text-3xl\">\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? DataEn[\"product\"]?.name\r\n                : Data[\"product\"]?.name}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"content\">\r\n            <div className={`grid grid-cols-4 gap-4`}>\r\n              {data?.content.map(\r\n                (\r\n                  content: {\r\n                    [x: string]: any;\r\n                    contentEn: any;\r\n                    titleEn: any;\r\n                    link: any;\r\n                    id: any;\r\n                    imgSrc: any;\r\n                    title: any;\r\n                    content: any;\r\n                  },\r\n                  i: any,\r\n                ) => {\r\n                  return (\r\n                    <ProductCard\r\n                      key={content.id}\r\n                      srcImg={content.imgSrc}\r\n                      title={\r\n                        curlanguage.changeLanguage.value == \"en\"\r\n                          ? content.titleEn\r\n                          : content.title\r\n                      }\r\n                      content={\r\n                        curlanguage.changeLanguage.value == \"en\"\r\n                          ? content.contentEn\r\n                          : content.content\r\n                      }\r\n                      id={content.id}\r\n                      link={`Service/${content._id}`}\r\n                    ></ProductCard>\r\n                  );\r\n                },\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegularPages;\r\n","G:\\vercel\\lpc_landingpage\\src\\app\\Service\\[id]\\page.tsx",["713"],[],"\"use client\";\r\nimport SeoMeta from \"@/partials/SeoMeta\";\r\nimport Data from \"@/config/data.json\";\r\nimport DataEn from \"@/config/dataEn.json\";\r\nimport { useParams, useRouter } from \"next/navigation\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { language } from \"@/feature/changeLanguage/changeLanguageSlice\";\r\nimport { product } from \"@/feature/data/productSlice\";\r\nimport PageHeader from \"@/partials/PageHeader\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { loadViaId } from \"@/lib/loadData\";\r\nimport \"../../../styles/scroll.scss\";\r\nconst RegularPages = () => {\r\n  const params: any = useParams();\r\n  const productInfo = useSelector((rootState) => product(rootState));\r\n  let products: any = [];\r\n  const [data, setData]: any = useState({});\r\n  products = productInfo.productData.value.product.filter(\r\n    (item: { type: string }) => item.type == \"Service\",\r\n  );\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const router = useRouter();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchData = async () => {\r\n      if (products.length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"productList\") || \"[]\").length == 0\r\n        ) {\r\n          const serviceCheck = await loadViaId(params.id, \"Product\");\r\n          setData(serviceCheck.data);\r\n          if (Object.keys(serviceCheck.data).length == 0) {\r\n            router.replace(\"http://localhost:3000/\");\r\n          }\r\n          setIsLoading(false);\r\n        } else {\r\n          if (\r\n            JSON.parse(localStorage.getItem(\"productList\") || \"[]\")\r\n              .filter((item: { type: string }) => item.type == \"Service\")[0]\r\n              .content.filter((post) => post._id === params.id)[0] == undefined\r\n          ) {\r\n            router.replace(\"http://localhost:3000/\");\r\n          } else {\r\n            setData(\r\n              JSON.parse(localStorage.getItem(\"productList\") || \"[]\")\r\n                .filter((item: { type: string }) => item.type == \"Service\")[0]\r\n                .content.filter((post) => post._id === params.id)[0],\r\n            );\r\n\r\n            setIsLoading(false);\r\n          }\r\n        }\r\n      } else {\r\n        const service = products[0].content.filter(\r\n          (item: { [x: string]: any; link: string; type: string }) =>\r\n            params.id == item._id,\r\n        );\r\n        if (Object.keys(service[0]).length == 0) {\r\n          router.replace(\"http://localhost:3000/\");\r\n        }\r\n        setData(service[0]);\r\n\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    // call the function\r\n    fetchData()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [setData, setIsLoading]);\r\n  const onClickAbout = (e, id) => {\r\n    e && e.preventDefault(); // to avoid the link from redirecting\r\n    var elementToView = document.getElementById(id);\r\n    if (elementToView) (elementToView as HTMLFormElement).scrollIntoView();\r\n  };\r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n  return isLoading ? (\r\n    <></>\r\n  ) : (\r\n    <section>\r\n      <SeoMeta\r\n        title={data?.title}\r\n        meta_title={data?.meta_title}\r\n        description={data?.content}\r\n        image={data?.image}\r\n      />\r\n      <PageHeader\r\n        title={\r\n          curlanguage.changeLanguage.value == \"en\" ? data?.titleEn : data?.title\r\n        }\r\n      />\r\n      <div className=\"relative\">\r\n        {/* <div className=\"border-b border-gray-200 dark:border-gray-700 sticky top-20 left-0 right-0 bg-white\">\r\n          <nav\r\n            className=\"-mb-0.5 flex justify-center space-x-6 sticky top-10\"\r\n            aria-label=\"Tabs\"\r\n            role=\"tablist\"\r\n          >\r\n            {data?.description.map((content: any, i: any) => {\r\n              return (\r\n                <a\r\n                  key={content._id}\r\n                  // href={`#${content._id}`}\r\n                  className=\" cursor-pointer hs-tab-active:font-semibold hs-tab-active:border-blue-600 hs-tab-active:text-blue-600 py-4 px-1 inline-flex items-center gap-2 border-b-[3px] border-transparent text-sm whitespace-nowrap text-gray-500 hover:text-blue-600\"\r\n                  id=\"horizontal-alignment-item-2\"\r\n                  data-hs-tab=\"#horizontal-alignment-2\"\r\n                  aria-controls=\"horizontal-alignment-2\"\r\n                  role=\"tab\"\r\n                  onClick={(e) => onClickAbout(e, content._id)}\r\n                >\r\n                  {content.title}\r\n                </a>\r\n              );\r\n            })}\r\n          </nav>\r\n        </div> */}\r\n        <div className=\"h-52 w-full bg-cover  bg-[url(https://images.unsplash.com/photo-1504384308090-c894fdcc538d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80)]\">\r\n          <div className=\"flex items-center justify-center h-full w-full bg-gray-900 bg-opacity-50\">\r\n            <div className=\"text-center\">\r\n              <h1 className=\"text-white text-2xl font-semibold uppercase md:text-3xl\">\r\n                {curlanguage.changeLanguage.value == \"en\"\r\n                  ? DataEn[\"service_detail\"]?.name\r\n                  : Data[\"service_detail\"]?.name}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <section className=\"section\">\r\n          <div className=\"container\">\r\n            <div\r\n              className=\"content\"\r\n              dangerouslySetInnerHTML={{\r\n                __html:\r\n                  curlanguage.changeLanguage.value == \"en\"\r\n                    ? data.descriptionEn\r\n                    : data.description,\r\n              }}\r\n            >\r\n              {/* {data?.description.map((content: any, i: any) => {\r\n                return (\r\n                  <div key={content._id}>\r\n                    <h2 className=\"text-3xl font-semibold leading-8 text-gray-900\">\r\n                      {i + 1}-\r\n                      {curlanguage.changeLanguage.value == \"en\"\r\n                        ? content.titleEn\r\n                        : content.title}\r\n                    </h2>\r\n                    <div\r\n                      id={content._id}\r\n                      className=\"description\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html:\r\n                          curlanguage.changeLanguage.value == \"en\"\r\n                            ? content.contentEn\r\n                            : content.content,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                );\r\n              })} */}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegularPages;\r\n","G:\\vercel\\lpc_landingpage\\src\\app\\Solution\\page.tsx",["714"],[],"\"use client\";\r\nimport { language } from \"@/feature/changeLanguage/changeLanguageSlice\";\r\nimport ImageFallback from \"@/helpers/ImageFallback\";\r\nimport { markdownify } from \"@/lib/utils/textConverter\";\r\nimport SeoMeta from \"@/partials/SeoMeta\";\r\nimport { FaCheck } from \"react-icons/fa/index.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Data from \"@/config/data.json\";\r\nimport DataEn from \"@/config/dataEn.json\";\r\nimport \"../../styles/scroll.scss\";\r\nimport { companyProduct, product } from \"@/feature/data/productSlice\";\r\nimport PageHeader from \"@/partials/PageHeader\";\r\nimport Link from \"next/link\";\r\nimport { useEffect } from \"react\";\r\nimport { loadProduct } from \"@/lib/loadData\";\r\nconst Solutions = () => {\r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n  const productInfo = useSelector((rootState) => product(rootState));\r\n\r\n  let data = productInfo.productData.value.product.filter(\r\n    (item: { type: string }) => item.type == \"Solution\",\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchSolution = async () => {\r\n      if (data.length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"productList\") || \"[]\").length == 1\r\n        ) {\r\n          const productCheck = await loadProduct();\r\n          dispatch(companyProduct(productCheck));\r\n          data = productCheck.filter(\r\n            (item: { type: string }) => item.type == \"Solution\",\r\n          );\r\n          \r\n        } else {\r\n          data = JSON.parse(localStorage.getItem(\"productList\") || \"[]\").filter(\r\n            (item: { type: string }) => item.type == \"Solution\",\r\n          );\r\n        }\r\n      } else {\r\n      }\r\n    };\r\n    // call the function\r\n    fetchSolution()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <SeoMeta />\r\n      <PageHeader\r\n        title={\r\n          curlanguage.changeLanguage.value == \"en\"\r\n            ? DataEn[\"solution\"].name\r\n            : Data[\"solution\"].name\r\n        }\r\n      />\r\n      <div className=\"border-b border-gray-200 dark:border-gray-700 sticky top-20 left-0 right-0 bg-white\">\r\n        <nav\r\n          className=\"-mb-0.5 flex justify-center space-x-6 sticky top-10\"\r\n          aria-label=\"Tabs\"\r\n          role=\"tablist\"\r\n        >\r\n          {data.map((content: any, i: any) => {\r\n            return (\r\n              <a\r\n                key={content._id}\r\n                href={`#${content._id}`}\r\n                className=\"hs-tab-active:font-semibold hs-tab-active:border-blue-600 hs-tab-active:text-blue-600 py-4 px-1 inline-flex items-center gap-2 border-b-[3px] border-transparent text-sm whitespace-nowrap text-gray-500 hover:text-blue-600\"\r\n                id=\"horizontal-alignment-item-2\"\r\n                data-hs-tab=\"#horizontal-alignment-2\"\r\n                aria-controls=\"horizontal-alignment-2\"\r\n                role=\"tab\"\r\n              >\r\n                {curlanguage.changeLanguage.value == \"en\"\r\n                  ? content.titleEn\r\n                  : content.title}\r\n              </a>\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {data.map(\r\n        (\r\n          feature: {\r\n            prosEn: any;\r\n            descriptionEn2: string;\r\n            titleEn: string;\r\n            _id: string | undefined;\r\n            image: any;\r\n            title: string;\r\n            description2: string;\r\n            pros: string[];\r\n            link: string;\r\n          },\r\n          index: number,\r\n        ) => (\r\n          <section\r\n            key={index}\r\n            className={`section-sm ${index % 2 === 0 && \"bg-gradient\"}`}\r\n          >\r\n            <div className=\"container\" id={feature._id}>\r\n              <div className=\"row items-center justify-between\">\r\n                <div\r\n                  className={`mb:md-0 mb-6 md:col-5 ${\r\n                    index % 2 !== 0 && \"md:order-2\"\r\n                  }`}\r\n                >\r\n                  <ImageFallback\r\n                    src={feature.image}\r\n                    height={480}\r\n                    width={520}\r\n                    alt={feature.image}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className={`md:col-7 lg:col-6 ${\r\n                    index % 2 !== 0 && \"md:order-1\"\r\n                  }`}\r\n                >\r\n                  <h2\r\n                    className=\"mb-4\"\r\n                    dangerouslySetInnerHTML={markdownify(\r\n                      curlanguage.changeLanguage.value == \"en\"\r\n                        ? feature.titleEn\r\n                        : feature.title,\r\n                    )}\r\n                  />\r\n                  <p\r\n                    className=\"mb-8 text-lg\"\r\n                    dangerouslySetInnerHTML={markdownify(\r\n                      curlanguage.changeLanguage.value == \"en\"\r\n                        ? feature.descriptionEn2\r\n                        : feature.description2,\r\n                    )}\r\n                  />\r\n                  <ul>\r\n                    {curlanguage.changeLanguage.value == \"en\"\r\n                      ? feature.prosEn.map((bullet: string) => (\r\n                          <li className=\"relative mb-4 pl-6\" key={bullet}>\r\n                            <FaCheck className={\"absolute left-0 top-1.5\"} />\r\n                            <span\r\n                              dangerouslySetInnerHTML={markdownify(bullet)}\r\n                            />\r\n                          </li>\r\n                        ))\r\n                      : feature.pros.map((bullet: string) => (\r\n                          <li className=\"relative mb-4 pl-6\" key={bullet}>\r\n                            <FaCheck className={\"absolute left-0 top-1.5\"} />\r\n                            <span\r\n                              dangerouslySetInnerHTML={markdownify(bullet)}\r\n                            />\r\n                          </li>\r\n                        ))}\r\n                  </ul>\r\n\r\n                  <Link\r\n                    className=\"btn btn-primary mt-5\"\r\n                    href={`/Solution/${feature._id}`}\r\n                  >\r\n                    {curlanguage.changeLanguage.value == \"en\"\r\n                      ? DataEn[\"text3\"].name\r\n                      : Data[\"text3\"].name}\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        ),\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Solutions;\r\n","G:\\vercel\\lpc_landingpage\\src\\app\\Solution\\[id]\\page.tsx",["715"],[],"\"use client\";\r\nimport ProductCard from \"../../../layouts/components/productCard\";\r\nimport SeoMeta from \"@/partials/SeoMeta\";\r\nimport Data from \"@/config/data.json\";\r\nimport DataEn from \"@/config/dataEn.json\";\r\nimport { useParams, useRouter } from \"next/navigation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { language } from \"@/feature/changeLanguage/changeLanguageSlice\";\r\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\r\nimport { companyProduct, product } from \"@/feature/data/productSlice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { loadProduct } from \"@/lib/loadData\";\r\n\r\nconst RegularPages = () => {\r\n  const params: any = useParams();\r\n  const productInfo = useSelector((rootState) => product(rootState));\r\n  let products = [];\r\n  let [data, setData]: any = useState({});\r\n  products = productInfo.productData.value.product.filter(\r\n    (item: { type: string }) => item.type == \"Solution\",\r\n  );\r\n  const solution = products.filter(\r\n    (item: { [x: string]: any; link: string; type: string }) =>\r\n      params.id == item._id,\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchSolution = async () => {\r\n      if (products.length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"productList\") || \"[]\").length == 1\r\n        ) {\r\n          const productCheck = await loadProduct();\r\n          dispatch(companyProduct(productCheck));\r\n          const result = productCheck.products.filter(\r\n            (item: { type: string }) => item.type == \"Solution\",\r\n          );\r\n          setData(\r\n            result.filter(\r\n              (item: { [x: string]: any; link: string; type: string }) =>\r\n                params.id == item._id,\r\n            )[0],\r\n          );\r\n          if (data == undefined) {\r\n            router.replace(\"http://localhost:3000/\");\r\n          }\r\n        } else {\r\n          setData(\r\n            JSON.parse(localStorage.getItem(\"productList\") || \"[]\")\r\n              .filter((item: { type: string }) => item.type == \"Solution\")\r\n              .filter(\r\n                (item: { [x: string]: any; link: string; type: string }) =>\r\n                  params.id == item._id,\r\n              )[0],\r\n          );\r\n          if (data == undefined) {\r\n            router.replace(\"http://localhost:3000/\");\r\n          }\r\n        }\r\n      } else {\r\n        setData(solution[0]);\r\n        if (data == undefined) {\r\n          router.replace(\"http://localhost:3000/\");\r\n        }\r\n      }\r\n    };\r\n    // call the function\r\n    fetchSolution()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [data]);\r\n  \r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n  return data == undefined || Object.keys(data).length == 0 ? (\r\n    <></>\r\n  ) : (\r\n    <section>\r\n      <SeoMeta\r\n        title={data?.title}\r\n        meta_title={data?.meta_title}\r\n        description={data?.description}\r\n        image={data?.image}\r\n      />\r\n\r\n      <div className=\"container text-center\">\r\n        <div className=\"rounded-2xl bg-gradient-to-b from-body to-theme-light px-8 py-14 dark:from-darkmode-body dark:to-darkmode-theme-light\">\r\n          <h1>\r\n            {curlanguage.changeLanguage.value == \"en\"\r\n              ? data?.titleEn.toUpperCase()\r\n              : data?.title.toUpperCase()}\r\n          </h1>\r\n          <Breadcrumbs className=\"mt-6\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"h-52 w-full bg-cover  bg-[url(https://images.unsplash.com/photo-1504384308090-c894fdcc538d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80)]\">\r\n        <div className=\"flex items-center justify-center h-full w-full bg-gray-900 bg-opacity-50\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-white text-2xl font-semibold uppercase md:text-3xl\">\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? DataEn[\"product\"]?.name\r\n                : Data[\"product\"]?.name}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"content\">\r\n            <div className={`grid grid-cols-4 gap-4`}>\r\n              {data?.content.map(\r\n                (\r\n                  content: {\r\n                    [x: string]: any;\r\n                    contentEn: any;\r\n                    titleEn: any;\r\n                    link: any;\r\n                    id: any;\r\n                    imgSrc: any;\r\n                    title: any;\r\n                    content: any;\r\n                  },\r\n                  i: any,\r\n                ) => {\r\n                  return (\r\n                    <ProductCard\r\n                      key={content.id}\r\n                      srcImg={content.imgSrc}\r\n                      title={\r\n                        curlanguage.changeLanguage.value == \"en\"\r\n                          ? content.titleEn\r\n                          : content.title\r\n                      }\r\n                      content={\r\n                        curlanguage.changeLanguage.value == \"en\"\r\n                          ? content.contentEn\r\n                          : content.content\r\n                      }\r\n                      id={content.id}\r\n                      link={`${data?._id}/${content._id}`}\r\n                    ></ProductCard>\r\n                  );\r\n                },\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegularPages;\r\n","G:\\vercel\\lpc_landingpage\\src\\app\\Solution\\[id]\\[idcontent]\\page.tsx",["716"],[],"\"use client\";\r\nimport { language } from \"@/feature/changeLanguage/changeLanguageSlice\";\r\nimport \"../../../../styles/scroll.scss\";\r\nimport PageHeader from \"@/partials/PageHeader\";\r\nimport SeoMeta from \"@/partials/SeoMeta\";\r\nimport { useParams, useRouter } from \"next/navigation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Data from \"@/config/data.json\";\r\nimport DataEn from \"@/config/dataEn.json\";\r\nimport { companyProduct, product } from \"@/feature/data/productSlice\";\r\nimport { loadProduct } from \"@/lib/loadData\";\r\nimport { useEffect, useState } from \"react\";\r\nconst RegularPages = () => {\r\n  const params: any = useParams();\r\n  const productInfo = useSelector((rootState) => product(rootState));\r\n  let products = [];\r\n  let data: any = [];\r\n  let [resultData, setResultData]: any = useState({});\r\n  products = productInfo.productData.value.product.filter(\r\n    (item: { type: string }) => item.type == \"Solution\",\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchSolution = async () => {\r\n      if (products.length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"productList\") || \"[]\").length == 1\r\n        ) {\r\n          const productCheck = await loadProduct();\r\n          dispatch(companyProduct(productCheck));\r\n          if (\r\n            productCheck.products\r\n              .filter((item: { type: string }) => item.type == \"Solution\")\r\n              .filter(\r\n                (item: { [x: string]: any; link: string; type: string }) =>\r\n                  params.id == item._id,\r\n              )[0] == undefined\r\n          ) {\r\n            router.replace(\"http://localhost:3000/\");\r\n          }\r\n          data = productCheck.products\r\n            .filter((item: { type: string }) => item.type == \"Solution\")\r\n            .filter(\r\n              (item: { [x: string]: any; link: string; type: string }) =>\r\n                params.id == item._id,\r\n            )[0]\r\n            .content.filter(\r\n              (item: { [x: string]: any; link: string; type: string }) =>\r\n                params.idcontent == item._id,\r\n            );\r\n\r\n          setResultData(data);\r\n          if (data == undefined) {\r\n            router.replace(\"http://localhost:3000/\");\r\n          }\r\n        } else {\r\n          if (\r\n            JSON.parse(localStorage.getItem(\"productList\") || \"[]\")\r\n              .filter((item: { type: string }) => item.type == \"Solution\")\r\n              .filter(\r\n                (item: { [x: string]: any; link: string; type: string }) =>\r\n                  params.id == item._id,\r\n              )[0] == undefined\r\n          ) {\r\n            router.replace(\"http://localhost:3000/\");\r\n          }\r\n          data = JSON.parse(localStorage.getItem(\"productList\") || \"[]\")\r\n            .filter((item: { type: string }) => item.type == \"Solution\")\r\n            .filter(\r\n              (item: { [x: string]: any; link: string; type: string }) =>\r\n                params.id == item._id,\r\n            )[0]\r\n            .content.filter(\r\n              (item: { [x: string]: any; link: string; type: string }) =>\r\n                params.idcontent == item._id,\r\n            );\r\n          setResultData(data);\r\n          if (data == undefined) {\r\n            router.replace(\"http://localhost:3000/\");\r\n          }\r\n        }\r\n      } else {\r\n        const solution: any = products.filter(\r\n          (item: { [x: string]: any; link: string; type: string }) =>\r\n            params.id == item._id,\r\n        );\r\n        if (solution[0] == undefined) {\r\n          router.replace(\"http://localhost:3000/\");\r\n        }\r\n        const contain = solution[0].content.filter(\r\n          (item: { [x: string]: any; link: string; type: string }) =>\r\n            params.idcontent == item._id,\r\n        );\r\n        data = contain[0];\r\n        if (data == undefined) {\r\n          router.replace(\"http://localhost:3000/\");\r\n        }\r\n        setResultData(data);\r\n      }\r\n    };\r\n    // call the function\r\n    fetchSolution()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [resultData]);\r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n  return resultData == undefined || Object.keys(resultData).length == 0 ? (\r\n    <></>\r\n  ) : (\r\n    <section>\r\n      <SeoMeta\r\n        title={resultData?.title}\r\n        meta_title={resultData?.meta_title}\r\n        description={resultData?.content}\r\n        image={resultData?.image}\r\n      />\r\n      <PageHeader\r\n        title={\r\n          curlanguage.changeLanguage.value == \"en\"\r\n            ? resultData?.titleEn\r\n            : resultData?.title\r\n        }\r\n      />\r\n      <div className=\"relative\">\r\n        {/* <div className=\"border-b border-gray-200 dark:border-gray-700 sticky top-20 left-0 right-0 bg-white\">\r\n          <nav\r\n            className=\"-mb-0.5 flex justify-center space-x-6 sticky top-10\"\r\n            aria-label=\"Tabs\"\r\n            role=\"tablist\"\r\n          >\r\n            {resultData?.description.map((content: any, i: any) => {\r\n              return (\r\n                <a\r\n                  key={content._id}\r\n                  // href={`#${content._id}`}\r\n                  className=\"cursor-pointer hs-tab-active:font-semibold hs-tab-active:border-blue-600 hs-tab-active:text-blue-600 py-4 px-1 inline-flex items-center gap-2 border-b-[3px] border-transparent text-sm whitespace-nowrap text-gray-500 hover:text-blue-600\"\r\n                  id=\"horizontal-alignment-item-2\"\r\n                  data-hs-tab=\"#horizontal-alignment-2\"\r\n                  aria-controls=\"horizontal-alignment-2\"\r\n                  role=\"tab\"\r\n                  onClick={(e) => onClickAbout(e, content._id)}\r\n                >\r\n                  {content.title}\r\n                </a>\r\n              );\r\n            })}\r\n          </nav>\r\n        </div> */}\r\n        <div className=\"h-52 w-full bg-cover  bg-[url(https://images.unsplash.com/photo-1504384308090-c894fdcc538d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80)]\">\r\n          <div className=\"flex items-center justify-center h-full w-full bg-gray-900 bg-opacity-50\">\r\n            <div className=\"text-center\">\r\n              <h1 className=\"text-white text-2xl font-semibold uppercase md:text-3xl\">\r\n                {curlanguage.changeLanguage.value == \"en\"\r\n                  ? DataEn[\"service_detail\"]?.name\r\n                  : Data[\"service_detail\"]?.name}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <section className=\"section\">\r\n          <div className=\"container\">\r\n            <div\r\n              className=\"content\"\r\n              dangerouslySetInnerHTML={{\r\n                __html:\r\n                  curlanguage.changeLanguage.value == \"en\"\r\n                    ? resultData.descriptionEn\r\n                    : resultData.description,\r\n              }}\r\n            >\r\n              {/* {resultData?.description.map((content: any, i: any) => {\r\n                return (\r\n                  <div key={content._id}>\r\n                    <h2\r\n                      id={content._id}\r\n                      className=\"text-3xl font-semibold leading-8 text-gray-900\"\r\n                    >\r\n                      {i + 1}-\r\n                      {curlanguage.changeLanguage.value == \"en\"\r\n                        ? content.titleEn\r\n                        : content.title}\r\n                    </h2>\r\n                    <div\r\n                      className=\"description\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html:\r\n                          curlanguage.changeLanguage.value == \"en\"\r\n                            ? content.contentEn\r\n                            : content.content,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                );\r\n              })} */}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegularPages;\r\n","G:\\vercel\\lpc_landingpage\\src\\app\\tags\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\app\\tags\\[single]\\page.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\feature\\changeLanguage\\changeLanguageSlice.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\feature\\data\\companySlice.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\feature\\data\\customerSlice.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\feature\\data\\newSlice.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\feature\\data\\partnerSlice.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\feature\\data\\productSlice.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\feature\\login\\loginSlice.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\feature\\search\\searchSlice.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\hooks\\useLoadMore.ts",[],["717"],"G:\\vercel\\lpc_landingpage\\src\\hooks\\useOs.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\hooks\\useTooltip.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\hooks\\useWindow.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\banner\\bannerTable.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\banner\\createBanner.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\banner\\updateBanner.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\contact\\addContact.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\contact\\tableContact.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\customers\\createCustomer.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\customers\\customerTable.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\customers\\updateCustomer.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\message\\messageTable.tsx",["718"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"@mantine/core\";\r\nimport { loadMessage } from \"@/lib/loadData\";\r\n\r\ninterface Message {\r\n  _id: string;\r\n\r\n  name: string;\r\n\r\n  email: string;\r\n  message: string;\r\n}\r\n\r\nfunction MessageTable() {\r\n  const [messageData, setMessageData] = useState<Message[]>([]);\r\n  useEffect(() => {\r\n    const fetchNew = async () => {\r\n      if (messageData.length == 0) {\r\n        const messageCheck = await loadMessage();\r\n        setMessageData(messageCheck.messages);\r\n      } else {\r\n      }\r\n    };\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const rows = messageData.map((partner, index) => (\r\n    <tr key={partner._id}>\r\n      <td>{index + 1}</td>\r\n\r\n      <td>{partner.name}</td>\r\n\r\n      <td>{partner.email}</td>\r\n\r\n      <td> {partner.message}</td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n\r\n            <th>Name</th>\r\n\r\n            <th>From</th>\r\n\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>{rows}</tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageTable;\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\news\\createNew.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\news\\newTable.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\news\\updateNew.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\partners\\createPartner.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\partners\\partnerTable.tsx",["719"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"@mantine/core\";\r\nimport Image from \"next/image\";\r\nimport { loadPartner } from \"@/lib/loadData\";\r\n\r\ninterface Partner {\r\n  _id: string;\r\n\r\n  name: string;\r\n\r\n  src: string;\r\n}\r\n\r\nfunction PartnerTable() {\r\n  const [partnerData, setPartnerData] = useState<Partner[]>([]);\r\n  useEffect(() => {\r\n    const fetchNew = async () => {\r\n      if (partnerData.length == 0) {\r\n        const partnerCheck = await loadPartner();\r\n        setPartnerData(partnerCheck.partner);\r\n      } else {\r\n      }\r\n    };\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const rows = partnerData.map((partner, index) => (\r\n    <tr key={partner._id}>\r\n      <td>{index + 1}</td>\r\n\r\n      <td>{partner.name}</td>\r\n\r\n      <td>\r\n        <Image src={partner.src} alt={partner.src} width={100} height={100} />\r\n      </td>\r\n\r\n      <td></td>\r\n\r\n      <td>\r\n        <button>Edit</button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n\r\n            <th>Name</th>\r\n\r\n            <th>Logo</th>\r\n\r\n            <th>Status</th>\r\n\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>{rows}</tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartnerTable;\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\partners\\updatePartner.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\contentTable.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\createContent.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\createProduct.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\productTable.tsx",["720"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Table, Modal, Button, Box, Grid, Col } from \"@mantine/core\";\r\n\r\nimport Image from \"next/image\";\r\nimport { loadProduct } from \"@/lib/loadData\";\r\nimport { companyProduct, product } from \"@/feature/data/productSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ContentTable from \"./contentTable\";\r\n\r\ninterface Product {\r\n  _id: string;\r\n\r\n  title: string;\r\n\r\n  titleEn: string;\r\n\r\n  description1: string;\r\n\r\n  description2: string;\r\n\r\n  descriptionEn1: string;\r\n\r\n  descriptionEn2: string;\r\n\r\n  type: string;\r\n\r\n  image: string;\r\n\r\n  pros: string[];\r\n\r\n  prosEn: string[];\r\n\r\n  content: Array<Record<string, any>>;\r\n}\r\n\r\nfunction ProductTable() {\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [contentView, setContentView] = useState(false);\r\n  const [showContent, setShowContent] = useState(false);\r\n  const productInfo = useSelector((rootState) => product(rootState));\r\n\r\n  let serviceList = productInfo.productData.value.product;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchNew = async () => {\r\n      const productCheck = await loadProduct();\r\n      dispatch(companyProduct(productCheck));\r\n    };\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const handleEditClick = (product: Product) => {\r\n    setSelectedProduct(product);\r\n\r\n    setIsEditMode(selectedProduct === product); // Chỉ thiết lập isEditMode thành true nếu sản phẩm đã được chọn đang được chỉnh sửa\r\n  };\r\n  const viewContent = (product: Product) => {\r\n    setSelectedProduct(product);\r\n\r\n    setShowContent(true); // Chỉ thiết lập isEditMode thành true nếu sản phẩm đã được chọn đang được chỉnh sửa\r\n  };\r\n  const handleSaveClick = () => {\r\n    // Thực hiện lưu thay đổi vào cơ sở dữ liệu (gọi API, ...)\r\n\r\n    setIsEditMode(false); // Chuyển về chế độ xem sau khi lưu thành công\r\n  };\r\n\r\n  const handleViewClick = (product: Product) => {\r\n    setSelectedProduct(product);\r\n\r\n    setContentView(true); // Chuyển sang chế độ xem\r\n  };\r\n\r\n  const toggleShowContent = () => {\r\n    setShowContent(!showContent);\r\n  };\r\n\r\n  const rows = serviceList.map((product, index) => (\r\n    <tr key={product._id}>\r\n      <td>{index + 1}</td>\r\n\r\n      <td>{product.title}</td>\r\n\r\n      <td>\r\n        {product.description1.length > 150\r\n          ? `${product.description1.slice(0, 150)}...`\r\n          : product.description1}\r\n      </td>\r\n\r\n      <td>\r\n        {product.description2.length > 150\r\n          ? `${product.description2.slice(0, 150)}...`\r\n          : product.description2}\r\n      </td>\r\n\r\n      <td></td>\r\n\r\n      <td>\r\n        <button onClick={() => setSelectedProduct(product)}>View</button>\r\n\r\n        <button onClick={() => handleEditClick(product)}>Edit</button>\r\n        <button onClick={() => viewContent(product)}>View content</button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n\r\n            <th>Name</th>\r\n\r\n            <th>General</th>\r\n\r\n            <th>Introduce</th>\r\n\r\n            <th>Status</th>\r\n\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>{rows}</tbody>\r\n      </Table>\r\n\r\n      <Modal\r\n        size=\"1000px\"\r\n        opened={Boolean(selectedProduct)}\r\n        onClose={() => {\r\n          setSelectedProduct(null);\r\n\r\n          setIsEditMode(false); // Đảm bảo rằng sau khi đóng modal, chế độ xem lại được kích hoạt\r\n        }}\r\n      >\r\n        {selectedProduct && !showContent && (\r\n          <section className=\"section\">\r\n            <div className=\"container\">\r\n              <h3 className=\"flex justify-center\">\r\n                {isEditMode ? \"Edit Product\" : \"Product Details\"}\r\n              </h3>\r\n\r\n              <Box maw={800} mx=\"auto\">\r\n                <form>\r\n                  <Grid gutter=\"lg\">\r\n                    <Col span={12}>\r\n                      <label>Type: </label>\r\n\r\n                      <input\r\n                        value={selectedProduct.type}\r\n                        disabled\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                      <label>Title: </label>\r\n\r\n                      <input\r\n                        value={selectedProduct.title}\r\n                        disabled\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                      <label>Title (English): </label>\r\n\r\n                      <input\r\n                        value={selectedProduct.titleEn}\r\n                        disabled\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                      <label>Description 1: </label>\r\n\r\n                      <textarea\r\n                        value={selectedProduct.description1}\r\n                        disabled\r\n                        style={{ width: \"100%\", height: \"150px\" }}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                      <label>Description 1 (English): </label>\r\n\r\n                      <textarea\r\n                        value={selectedProduct.descriptionEn1}\r\n                        disabled\r\n                        style={{ width: \"100%\", height: \"150px\" }}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                      <label>Description 2: </label>\r\n\r\n                      <textarea\r\n                        value={selectedProduct.description2}\r\n                        disabled\r\n                        style={{ width: \"100%\", height: \"150px\" }}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                      <label>Description 2 (English): </label>\r\n\r\n                      <textarea\r\n                        value={selectedProduct.descriptionEn2}\r\n                        disabled\r\n                        style={{ width: \"100%\", height: \"150px\" }}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <label>Image:</label>\r\n\r\n                      <Image\r\n                        src={selectedProduct.image}\r\n                        alt=\"Product Image\"\r\n                        width={300}\r\n                        height={300}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                      <label>Pros: </label>\r\n\r\n                      <textarea\r\n                        value={selectedProduct.pros.join(\"\\n\")} // Join các phần tử cách nhau bằng dấu xuống dòng\r\n                        disabled\r\n                        style={{ width: \"100%\", height: \"150px\" }} // Đặt chiều rộng và chiều cao\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                      <label>Pros (English): </label>\r\n\r\n                      <textarea\r\n                        value={selectedProduct.prosEn.join(\"\\n\")} // Join các phần tử cách nhau bằng dấu xuống dòng\r\n                        disabled\r\n                        style={{ width: \"100%\", height: \"150px\" }} // Đặt chiều rộng và chiều cao\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <label>Content: </label>\r\n\r\n                      <div>\r\n                        {selectedProduct.content.map((content, index) => (\r\n                          <div key={index}>\r\n                            <div style={{ display: \"flex\", gap: \"16px\" }}>\r\n                              <div style={{ flex: 1 }}>\r\n                                <label>Title: </label>\r\n\r\n                                <textarea\r\n                                  value={content.title}\r\n                                  disabled\r\n                                  style={{ width: \"100%\" }}\r\n                                />\r\n                              </div>\r\n\r\n                              <div style={{ flex: 1 }}>\r\n                                <label>Title (English): </label>\r\n\r\n                                <textarea\r\n                                  value={content.titleEn}\r\n                                  disabled\r\n                                  style={{ width: \"100%\" }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Hiển thị nội dung còn lại */}\r\n\r\n                            <div style={{ display: \"flex\", gap: \"16px\" }}>\r\n                              <div style={{ flex: 1 }}>\r\n                                <label>Content: </label>\r\n\r\n                                <textarea\r\n                                  value={content.content}\r\n                                  disabled\r\n                                  style={{ width: \"100%\", height: \"150px\" }}\r\n                                />\r\n                              </div>\r\n\r\n                              <div style={{ flex: 1 }}>\r\n                                <label>Content (English): </label>\r\n\r\n                                <textarea\r\n                                  value={content.contentEn}\r\n                                  disabled\r\n                                  style={{ width: \"100%\", height: \"150px\" }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* <p>{content.content}</p>\r\n\r\n                            <p>{content.contentEn}</p> */}\r\n\r\n                            <Image\r\n                              src={content.imgSrc}\r\n                              alt={`Content Image ${index}`}\r\n                              width={300}\r\n                              height={300}\r\n                            />\r\n\r\n                            {content.description &&\r\n                              Array.isArray(content.description) &&\r\n                              content.description.map(\r\n                                (desc: any, descIndex: number) => (\r\n                                  <div key={descIndex}>\r\n                                    <div\r\n                                      style={{ display: \"flex\", gap: \"16px\" }}\r\n                                    >\r\n                                      <div style={{ flex: 1 }}>\r\n                                        <label>Description Title: </label>\r\n\r\n                                        <textarea\r\n                                          value={desc.title}\r\n                                          disabled\r\n                                          style={{\r\n                                            width: \"100%\",\r\n\r\n                                            height: \"150px\",\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n\r\n                                      <div style={{ flex: 1 }}>\r\n                                        <label>\r\n                                          Description Title (English):{\" \"}\r\n                                        </label>\r\n\r\n                                        <textarea\r\n                                          value={desc.titleEn}\r\n                                          disabled\r\n                                          style={{\r\n                                            width: \"100%\",\r\n\r\n                                            height: \"150px\",\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {/* Hiển thị nội dung còn lại của mô tả */}\r\n\r\n                                    <div style={{ marginTop: \"16px\" }}>\r\n                                      <label>Description Content: </label>\r\n\r\n                                      <textarea\r\n                                        value={desc.content}\r\n                                        disabled\r\n                                        style={{\r\n                                          width: \"100%\",\r\n\r\n                                          height: \"200px\",\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n\r\n                                    <div style={{ marginTop: \"16px\" }}>\r\n                                      <label>\r\n                                        Description Content (English):{\" \"}\r\n                                      </label>\r\n\r\n                                      <textarea\r\n                                        value={desc.contentEn}\r\n                                        disabled\r\n                                        style={{\r\n                                          width: \"100%\",\r\n\r\n                                          height: \"200px\",\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                ),\r\n                              )}\r\n\r\n                            {index !== selectedProduct.content.length - 1 && (\r\n                              <hr\r\n                                className=\"\"\r\n                                style={{\r\n                                  border: \"none\",\r\n\r\n                                  borderTop: \"1px solid red\",\r\n\r\n                                  margin: \"16px 0\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </Col>\r\n\r\n                    {/* ... Các phần khác tương tự như trên */}\r\n                  </Grid>\r\n                </form>\r\n              </Box>\r\n\r\n              <div style={{ marginTop: \"16px\" }}>\r\n                {isEditMode ? (\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={handleSaveClick}\r\n                    style={{ backgroundColor: \"#28a745\", color: \"white\" }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={() => setIsEditMode(true)}\r\n                    style={{ backgroundColor: \"#007bff\", color: \"white\" }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Modal>\r\n      <Modal\r\n        size=\"1000px\"\r\n        opened={Boolean(selectedProduct)}\r\n        onClose={() => {\r\n          setSelectedProduct(null);\r\n          setShowContent(false); // Đảm bảo rằng sau khi đóng modal, chế độ xem lại được kích hoạt\r\n        }}\r\n      >\r\n        <section className=\"section\">\r\n          <div className=\"container\">\r\n            <h3 className=\"flex justify-center\">Content</h3>\r\n\r\n            <Box maw={800} mx=\"auto\">\r\n              {showContent ? <ContentTable product={selectedProduct} /> : <></>}\r\n            </Box>\r\n          </div>{\" \"}\r\n        </section>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductTable;\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\updateContent.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\products\\updateProduct.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\admin\\RichTextEditor.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\banner.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\bannerContent.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\BlogCard.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Breadcrumbs.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\carousel.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\companyInfo.tsx",["721"],[],"\"use client\";\r\nimport Image from \"next/image\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { language } from \"@/feature/changeLanguage/changeLanguageSlice\";\r\nimport { company, companyData } from \"@/feature/data/companySlice\";\r\nimport Data from \"@/config/data.json\";\r\nimport DataEn from \"@/config/dataEn.json\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { loadCompanyInfo } from \"@/lib/loadData\";\r\nimport PartnerListForAbout from \"./partnerListForAbout\";\r\nimport CustomerListForAbout from \"./customerListForAbout\";\r\nexport default function CompanyInfo() {\r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n  const companyInfo = useSelector((rootState) => company(rootState));\r\n\r\n  let companyDatas: any = companyInfo.companyData.value;\r\n\r\n  const [isBusy, setBusy] = useState(true);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    async function fetchNew() {\r\n      if (Object.keys(companyDatas).length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"companyInfo\") || \"[]\").length == 1 ||\r\n          JSON.parse(localStorage.getItem(\"companyInfo\") || \"[]\").length == 0\r\n        ) {\r\n          const companyCheck = await loadCompanyInfo();\r\n\r\n          dispatch(companyData(companyCheck));\r\n        } else {\r\n          companyDatas = JSON.parse(\r\n            localStorage.getItem(\"companyInfo\") || \"[]\",\r\n          )[0];\r\n        }\r\n\r\n        setBusy(false);\r\n      } else {\r\n        setBusy(false);\r\n      }\r\n    }\r\n\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [isBusy]);\r\n  return isBusy ? (\r\n    <></>\r\n  ) : (\r\n    <section className=\"section-sm\">\r\n      <div className=\"container\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-9 gap-x-20 pb-32\">\r\n          <div className=\"min-h-[200px] col-span-5\">\r\n            <h3 className=\"col-span-5\">\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? DataEn[\"quote1\"].name\r\n                : Data[\"quote1\"].name}\r\n            </h3>\r\n            <p\r\n              dangerouslySetInnerHTML={{\r\n                __html:\r\n                  curlanguage.changeLanguage.value == \"en\"\r\n                    ? companyDatas.companyDescriptionEn.content\r\n                    : companyDatas.companyDescription.content,\r\n              }}\r\n            ></p>\r\n          </div>\r\n          <div className=\"min-h-[50px] col-span-4\">\r\n            <div className=\"relative h-full\">\r\n              <Image\r\n                src={companyDatas.companyDescription.image}\r\n                width={500}\r\n                height={300}\r\n                alt=\"LPC team\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-9 gap-x-20 pb-32\">\r\n          <div className=\"min-h-[50px] col-span-4\">\r\n            <div className=\"relative h-full\">\r\n              <Image\r\n                src={companyDatas.companyCore.image}\r\n                width={500}\r\n                height={300}\r\n                alt=\"LPC team\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"min-h-[200px] col-span-5\">\r\n            <h3 className=\"col-span-5\">\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? DataEn[\"basic_moral\"].name\r\n                : Data[\"basic_moral\"].name}\r\n            </h3>\r\n            <p\r\n              dangerouslySetInnerHTML={{\r\n                __html:\r\n                  curlanguage.changeLanguage.value == \"en\"\r\n                    ? companyDatas.companyCoreEn.content\r\n                    : companyDatas.companyCore.content,\r\n              }}\r\n            ></p>\r\n          </div>\r\n        </div>\r\n        <div className=\"min-h-[500px] grid grid-cols-3 h-full relative\">\r\n          <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n            <Image\r\n              src={\"https://res.cloudinary.com/derjssgq9/image/upload/v1692668701/LPC_Images/About/wm_1_jcg1xz.png\"}\r\n              height={400}\r\n              width={400}\r\n              alt=\"wm\"\r\n            />\r\n          </div>\r\n          <div className=\"min-h-[50px] flex flex-col items-center justify-center col-span-3\">\r\n            <h4 className=\"mb-1\">\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? DataEn[\"milestone\"].name\r\n                : Data[\"milestone\"].name}\r\n            </h4>\r\n            <h2>\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? DataEn[\"milestone\"].description\r\n                : Data[\"milestone\"].description}\r\n            </h2>\r\n          </div>\r\n          <div className=\"min-h-[50px] col-span-1 flex flex-col items-center justify-center\">\r\n            <h2 className=\"mb-1\">700+</h2>\r\n            <h6>\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? DataEn[\"projects\"].name\r\n                : Data[\"projects\"].name}\r\n            </h6>\r\n          </div>\r\n          <div className=\"min-h-[50px] col-span-1 flex flex-col items-center justify-center\">\r\n            <h2 className=\"mb-1\">&gt;30</h2>\r\n            <h6>\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? DataEn[\"partner\"].name\r\n                : Data[\"partner\"].name}\r\n            </h6>\r\n          </div>\r\n          <div className=\"min-h-[50px] col-span-1 flex flex-col items-center justify-center\">\r\n            <h2 className=\"mb-1\">36</h2>\r\n            <h6>\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? DataEn[\"customer2\"].name\r\n                : Data[\"customer2\"].name}\r\n            </h6>\r\n          </div>\r\n        </div>\r\n        <div className=\"py-24 sm:py-32\">\r\n          <div className=\"mx-auto max-w-7xl px-6 lg:px-8\">\r\n            <h3 className=\"text-center\">\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? DataEn[\"partner\"].description.toUpperCase()\r\n                : Data[\"partner\"].description.toUpperCase()}\r\n            </h3>\r\n            <PartnerListForAbout />\r\n          </div>\r\n        </div>\r\n        <div className=\"py-24 sm:py-32\">\r\n          <div className=\"mx-auto max-w-7xl px-6 lg:px-8\">\r\n            <h3\r\n              className=\"text-center\"\r\n              dangerouslySetInnerHTML={{\r\n                __html:\r\n                  curlanguage.changeLanguage.value == \"en\"\r\n                    ? DataEn[\"customer2\"].description.toUpperCase()\r\n                    : Data[\"customer2\"].description.toUpperCase(),\r\n              }}\r\n            ></h3>\r\n            <CustomerListForAbout />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\customerList.tsx",["722"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport Image from \"next/image\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { loadCustomer } from \"@/lib/loadData\";\r\nimport { customer, customerData } from \"@/feature/data/customerSlice\";\r\nimport \"../../styles/slider.scss\";\r\n// posts will be populated at build time by getStaticProps()\r\nexport default function CustomerList() {\r\n  // const newsCheck = await loadNews();\r\n  const customerInfo = useSelector((rootState) => customer(rootState));\r\n\r\n  let customerList = customerInfo.customerData.value.customerList;\r\n  const [customers, setCustomers] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchNew = async () => {\r\n      if (customers.length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"customerList\") || \"[]\").length ==\r\n            1 ||\r\n          JSON.parse(localStorage.getItem(\"customerList\") || \"[]\").length == 0\r\n        ) {\r\n          const customerCheck = await loadCustomer();\r\n\r\n          dispatch(customerData(customerCheck));\r\n          setCustomers(customerCheck.customer);\r\n        } else {\r\n          customerList = JSON.parse(\r\n            localStorage.getItem(\"customerList\") || \"[]\",\r\n          );\r\n          setCustomers(customerList);\r\n        }\r\n      } else {\r\n      }\r\n    };\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [customers]);\r\n  return customers.length == 0 ? (\r\n    <></>\r\n  ) : (\r\n    <div className=\"h-48 grid  content-center\">\r\n      <div className=\"slider\">\r\n        <div className=\"slide-track\">\r\n          {customers.map((img: { _id: string; src: string; type: string }) => {\r\n            return (\r\n              <div key={img._id} className=\"slide flex items-center mx-3\">\r\n                <Image\r\n                  key={img.src}\r\n                  className=\"flex items-center col-span-2 max-h-16 w-full object-contain lg:col-span-1\"\r\n                  src={img.src + \"\"}\r\n                  alt={img.type + \"\"}\r\n                  width={158}\r\n                  height={100}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries.\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\customerListForAbout.tsx",["723"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport Image from \"next/image\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { loadCustomer } from \"@/lib/loadData\";\r\nimport \"../../styles/slider.scss\";\r\n\r\nimport { customer, customerData } from \"@/feature/data/customerSlice\";\r\n// posts will be populated at build time by getStaticProps()\r\nexport default function CustomerListForAbout() {\r\n  // const newsCheck = await loadNews();\r\n  const customerInfo = useSelector((rootState) => customer(rootState));\r\n\r\n  let customerList = customerInfo.customerData.value.customerList;\r\n  const [customers, setCustomers] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchNew = async () => {\r\n      if (customers.length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"customerList\") || \"[]\").length ==\r\n            1 ||\r\n          JSON.parse(localStorage.getItem(\"productList\") || \"[]\").length == 0\r\n        ) {\r\n          const customerCheck = await loadCustomer();\r\n\r\n          dispatch(customerData(customerCheck));\r\n          setCustomers(customerCheck.customer);\r\n        } else {\r\n          customerList = JSON.parse(\r\n            localStorage.getItem(\"customerList\") || \"[]\",\r\n          );\r\n          setCustomers(customerList);\r\n        }\r\n      } else {\r\n      }\r\n    };\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [customers]);\r\n  return customers.length == 0 ? (\r\n    <></>\r\n  ) : (\r\n    <div className=\"mx-auto mt-10 grid max-w-lg grid-cols-4 items-center gap-x-8 gap-y-10 sm:max-w-xl sm:grid-cols-6 sm:gap-x-10 lg:mx-0 lg:max-w-none lg:grid-cols-5\">\r\n      {customers.map((img: { src: string; type: string }) => {\r\n        return (\r\n          <Image\r\n            key={img.src}\r\n            className=\"col-span-2 max-h-12 w-full object-contain lg:col-span-1\"\r\n            src={img.src + \"\"}\r\n            alt={img.type + \"\"}\r\n            width={158}\r\n            height={48}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries.\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Disqus.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\googleMap.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Logo.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\map.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\newItem.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\newList.tsx",["724"],[],"import NewITem from \"./newItem\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { language } from \"@/feature/changeLanguage/changeLanguageSlice\";\r\nimport { Grid } from \"@mantine/core\";\r\nimport { companyNew, news } from \"@/feature/data/newSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { loadNews } from \"@/lib/loadData\";\r\n// posts will be populated at build time by getStaticProps()\r\nexport default function Blog() {\r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n  // const newsCheck = await loadNews();\r\n  const newInfo = useSelector((rootState) => news(rootState));\r\n\r\n  const newList = newInfo.newData.value.companyNews;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchNew = async () => {\r\n      if (newList.length == 0) {\r\n        const newsCheck = await loadNews(\"\");\r\n        dispatch(companyNew(newsCheck));\r\n      } else {\r\n      }\r\n    };\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, []);\r\n  return (\r\n    <Grid className=\"flex justify-center\" justify=\"center\">\r\n      {newList.slice(0,4).map(\r\n        (\r\n          svc: {\r\n            [x: string]: any;\r\n            titleEn: any;\r\n            image: any;\r\n            title: any;\r\n            id: any;\r\n          },\r\n          i: any,\r\n        ) => {\r\n          return (\r\n            <Grid.Col key={svc._id} md={4} lg={2.5}>\r\n              <NewITem\r\n                src={svc.image}\r\n                title={\r\n                  curlanguage.changeLanguage.value == \"en\"\r\n                    ? svc.titleEn\r\n                    : svc.title\r\n                }\r\n                id={svc._id}\r\n                i={i}\r\n              />\r\n            </Grid.Col>\r\n          );\r\n        },\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries.\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Pagination.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\partnerList.tsx",["725"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport Image from \"next/image\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { loadPartner } from \"@/lib/loadData\";\r\nimport \"../../styles/slider2.scss\";\r\nimport { companyPartner, partner } from \"@/feature/data/partnerSlice\";\r\n// posts will be populated at build time by getStaticProps()\r\nexport default function PartnerList() {\r\n  // const newsCheck = await loadNews();\r\n  const partnerInfo = useSelector((rootState) => partner(rootState));\r\n  let partnerList = partnerInfo.partnerData.value.partnerList;\r\n  const [partners, setPartners] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchNew = async () => {\r\n      if (partners.length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"partnerList\") || \"[]\").length == 0 ||\r\n          JSON.parse(localStorage.getItem(\"partnerList\") || \"[]\").length == 1\r\n        ) {\r\n          const partnerCheck = await loadPartner();\r\n          dispatch(companyPartner(partnerCheck));\r\n          setPartners(partnerCheck.partner);\r\n        } else {\r\n          partnerList = JSON.parse(localStorage.getItem(\"partnerList\") || \"[]\");\r\n          setPartners(partnerList);\r\n        }\r\n      } else {\r\n      }\r\n    };\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [partners]);\r\n  return partners.length == 0 ? (\r\n    <></>\r\n  ) : (\r\n    <div className=\"h-48 grid  content-center\">\r\n      <div className=\"slider\">\r\n        <div className=\"slide-track\">\r\n          {partners.map((img: { _id: string; src: string; type: string }) => {\r\n            return (\r\n              <div key={img._id} className=\"slide flex items-center mx-3\">\r\n                <Image\r\n                  key={img.src}\r\n                  className=\"flex items-center col-span-2 max-h-16 w-full object-contain lg:col-span-1\"\r\n                  src={img.src + \"\"}\r\n                  alt={img.type + \"\"}\r\n                  width={158}\r\n                  height={100}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries.\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\partnerListForAbout.tsx",["726"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport Image from \"next/image\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { loadPartner } from \"@/lib/loadData\";\r\nimport \"../../styles/slider.scss\";\r\nimport { companyPartner, partner } from \"@/feature/data/partnerSlice\";\r\n// posts will be populated at build time by getStaticProps()\r\nexport default function PartnerListForAbout() {\r\n  // const newsCheck = await loadNews();\r\n  const partnerInfo = useSelector((rootState) => partner(rootState));\r\n  let partnerList = partnerInfo.partnerData.value.partnerList;\r\n  const [partners, setPartners] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchNew = async () => {\r\n      if (partners.length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"partnerList\") || \"[]\").length == 1 ||\r\n          JSON.parse(localStorage.getItem(\"productList\") || \"[]\").length == 0\r\n        ) {\r\n          const partnerCheck = await loadPartner();\r\n          dispatch(companyPartner(partnerCheck));\r\n          setPartners(partnerCheck.partner);\r\n        } else {\r\n          partnerList = JSON.parse(localStorage.getItem(\"partnerList\") || \"[]\");\r\n          setPartners(partnerList);\r\n        }\r\n      } else {\r\n      }\r\n    };\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [partners]);\r\n  return partners.length == 0 ? (\r\n    <></>\r\n  ) : (\r\n    <div className=\"mx-auto mt-10 grid max-w-lg grid-cols-4 items-center gap-x-8 gap-y-10 sm:max-w-xl sm:grid-cols-6 sm:gap-x-10 lg:mx-0 lg:max-w-none lg:grid-cols-5\">\r\n      {partners.map((img: { src: string; type: string }) => {\r\n        return (\r\n          <Image\r\n            key={img.src}\r\n            className=\"col-span-2 max-h-12 w-full object-contain lg:col-span-1\"\r\n            src={img.src + \"\"}\r\n            alt={img.type + \"\"}\r\n            width={158}\r\n            height={48}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries.\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\popup.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\productCard.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\productList.tsx",["727"],[],"\"use client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { language } from \"@/feature/changeLanguage/changeLanguageSlice\";\r\nimport { Grid } from \"@mantine/core\";\r\nimport { useEffect } from \"react\";\r\nimport { loadProduct } from \"@/lib/loadData\";\r\nimport { companyProduct, product } from \"@/feature/data/productSlice\";\r\nimport ServiceCard from \"./ServiceCard\";\r\n// posts will be populated at build time by getStaticProps()\r\nexport default function ProductList() {\r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n  // const newsCheck = await loadNews();\r\n  const productInfo = useSelector((rootState) => product(rootState));\r\n\r\n  let serviceList = productInfo.productData.value.product;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    const fetchNew = async () => {\r\n      if (serviceList.length == 0) {\r\n        if (\r\n          JSON.parse(localStorage.getItem(\"productList\") || \"[]\").length == 0 ||\r\n          JSON.parse(localStorage.getItem(\"productList\") || \"[]\").length == 1\r\n        ) {\r\n          const productCheck = await loadProduct();\r\n          dispatch(companyProduct(productCheck));\r\n        } else {\r\n          serviceList = JSON.parse(localStorage.getItem(\"productList\") || \"[]\");\r\n        }\r\n      } else {\r\n      }\r\n    };\r\n    // call the function\r\n    fetchNew()\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, []);\r\n  return (\r\n    <Grid className=\"flex justify-center\" justify=\"center\">\r\n      {serviceList.map(\r\n        (\r\n          svc: {\r\n            type: any;\r\n            descriptionEn1: any;\r\n            titleEn: any;\r\n            _id: any | null | undefined;\r\n            image: any;\r\n            title: any;\r\n            description1: any;\r\n            link: any;\r\n          },\r\n          i: any,\r\n        ) => {\r\n          return (\r\n            <Grid.Col key={svc._id} md={6} lg={2}>\r\n              <ServiceCard\r\n                src={svc.image}\r\n                title={\r\n                  curlanguage.changeLanguage.value == \"en\"\r\n                    ? svc.titleEn\r\n                    : svc.title\r\n                }\r\n                description={\r\n                  curlanguage.changeLanguage.value == \"en\"\r\n                    ? svc.descriptionEn1\r\n                    : svc.description1\r\n                }\r\n                link={\r\n                  svc.type == \"Solution\"\r\n                    ? `/${svc.type}/${svc._id}`\r\n                    : `/${svc.type}`\r\n                }\r\n                i={i}\r\n              />\r\n            </Grid.Col>\r\n          );\r\n        },\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries.\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\scrollToTopButton.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\ServiceCard.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Share.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\Social.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\components\\ThemeSwitcher.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\helpers\\DynamicIcon.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\helpers\\ImageFallback.tsx",[],["728"],"G:\\vercel\\lpc_landingpage\\src\\layouts\\helpers\\MDXContent.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\helpers\\TwSizeIndicator.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\CallToAction.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\Footer.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\Header.tsx",["729"],[],"\"use client\";\r\n\r\nimport { language } from \"../../feature/changeLanguage/changeLanguageSlice\";\r\nimport Logo from \"@/components/Logo\";\r\nimport ThemeSwitcher from \"@/components/ThemeSwitcher\";\r\nimport config from \"@/config/config.json\";\r\nimport menu from \"@/config/menu.json\";\r\nimport menuEn from \"@/config/menuEn.json\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { IoSearch } from \"react-icons/io5/index.js\";\r\nimport useScroll from \"../../lib/utils/use-scroll\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { UrlObject } from \"url\";\r\nimport { companyProduct, product } from \"@/feature/data/productSlice\";\r\nimport { loadProduct } from \"@/lib/loadData\";\r\nimport { useDispatch } from \"react-redux\";\r\n//  child navigation link interface\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // distructuring the main menu from menu object\r\n  const curlanguage = useSelector((rootState) => language(rootState));\r\n  const { main } = curlanguage.changeLanguage.value == \"en\" ? menuEn : menu;\r\n\r\n  const productInfo = useSelector((rootState) => product(rootState));\r\n  const pathname: any = usePathname();\r\n  let servicesMenu: any = [];\r\n  const scrolled = useScroll(50);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    // declare the data fetching function\r\n    const fetchProduct = async () => {\r\n      if (productInfo.productData.value.product.length == 0) {\r\n        const productCheck = await loadProduct();\r\n        dispatch(companyProduct(productCheck));\r\n        servicesMenu = productCheck.products.filter(\r\n          (item: { type: string }) => item.type == \"Service\",\r\n        );\r\n        main[1].children = productCheck.products.filter(\r\n          (item: { type: string }) => item.type == \"Solution\",\r\n        );\r\n        main[2].children = servicesMenu[0].content;\r\n      } else {\r\n        main[1].children = productInfo.productData.value.product.filter(\r\n          (item: { type: string }) => item.type == \"Solution\",\r\n        );\r\n        main[2].children = productInfo.productData.value.product.filter(\r\n          (item: { type: string }) => item.type == \"Service\",\r\n        )[0].content;\r\n      }\r\n    };\r\n    fetchProduct().catch(console.error);\r\n\r\n    // call the function\r\n\r\n    // make sure to catch any error\r\n  }, [main, pathname]);\r\n\r\n  const { navigation_button, settings } = config;\r\n  // get current path\r\n\r\n  return (\r\n    <header\r\n      className={`fixed top-0 w-full flex justify-center ${\r\n        scrolled\r\n          ? \"border-b border-gray-200 bg-white/50 backdrop-blur-xl\"\r\n          : \"bg-white/0\"\r\n      } z-30 transition-all`}\r\n    >\r\n      <nav className=\"navbar container\">\r\n        {/* logo */}\r\n        <div className=\"order-0\">\r\n          <Logo />\r\n        </div>\r\n        {/* navbar toggler */}\r\n        <input id=\"nav-toggle\" type=\"checkbox\" className=\"hidden\" />\r\n        <label\r\n          id=\"show-button\"\r\n          htmlFor=\"nav-toggle\"\r\n          className=\"order-3 flex cursor-pointer items-center text-dark dark:text-white lg:order-1 lg:hidden\"\r\n        >\r\n          <svg className=\"h-6 fill-current\" viewBox=\"0 0 20 20\">\r\n            <title>Menu Open</title>\r\n            <path d=\"M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z\"></path>\r\n          </svg>\r\n        </label>\r\n        <label\r\n          id=\"hide-button\"\r\n          htmlFor=\"nav-toggle\"\r\n          className=\"order-3 hidden cursor-pointer items-center text-dark dark:text-white lg:order-1\"\r\n        >\r\n          <svg className=\"h-6 fill-current\" viewBox=\"0 0 20 20\">\r\n            <title>Menu Close</title>\r\n            <polygon\r\n              points=\"11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2\"\r\n              transform=\"rotate(45 10 10)\"\r\n            ></polygon>\r\n          </svg>\r\n        </label>\r\n        {/* /navbar toggler */}\r\n\r\n        <ul\r\n          id=\"nav-menu\"\r\n          className=\"navbar-nav order-3 hidden w-full pb-6 lg:order-1 lg:flex lg:w-auto lg:space-x-2 lg:pb-0 xl:space-x-8\"\r\n        >\r\n          {main.map((menu, i) => (\r\n            <React.Fragment key={`menu-${i}`}>\r\n              {menu.hasChildren ? (\r\n                <li className=\"nav-item nav-dropdown group relative\">\r\n                  <Link\r\n                    className={`nav-link inline-flex items-center ${\r\n                      menu.children\r\n                        ?.map(({ url }: any) => url)\r\n                        .includes(pathname) ||\r\n                      menu.children\r\n                        ?.map(({ url }: any) => `${url}/`)\r\n                        .includes(pathname)\r\n                        ? \"active\"\r\n                        : \"\"\r\n                    }`}\r\n                    href={menu.link}\r\n                  >\r\n                    {menu.name}\r\n                    <svg className=\"h-4 w-4 fill-current\" viewBox=\"0 0 20 20\">\r\n                      <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                    </svg>\r\n                  </Link>\r\n                  <ul className=\"nav-dropdown-list hidden group-hover:block lg:invisible lg:absolute lg:block lg:opacity-0 lg:group-hover:visible lg:group-hover:opacity-100\">\r\n                    {menu.children?.map(\r\n                      (\r\n                        child: {\r\n                          [x: string]: any;\r\n                          titleEn: any;\r\n                          link: string | UrlObject;\r\n                          title: any;\r\n                          _id: any;\r\n                        },\r\n                        i: any,\r\n                      ) => (\r\n                        <li className=\"nav-dropdown-item\" key={`children-${i}`}>\r\n                          <Link\r\n                            href={`/${child.type ? \"Solution\" : \"Service\"}/${\r\n                              child._id\r\n                            }`}\r\n                            className={`nav-dropdown-link block ${\r\n                              (pathname === `${child._id}/` ||\r\n                                pathname === child._id) &&\r\n                              \"active\"\r\n                            }`}\r\n                          >\r\n                            {curlanguage.changeLanguage.value == \"en\"\r\n                              ? child.titleEn\r\n                              : child.title}\r\n                          </Link>\r\n                        </li>\r\n                      ),\r\n                    )}\r\n                  </ul>\r\n                </li>\r\n              ) : (\r\n                <li className=\"nav-item\">\r\n                  <Link\r\n                    href={menu.link}\r\n                    className={`nav-link block ${\r\n                      (pathname === `${menu.link}/` ||\r\n                        pathname === menu.link) &&\r\n                      \"active\"\r\n                    }`}\r\n                  >\r\n                    {menu.name}\r\n                  </Link>\r\n                </li>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n          {navigation_button.enable && (\r\n            <li className=\"mt-4 inline-block lg:hidden\">\r\n              <Link\r\n                className=\"btn btn-outline-primary btn-sm\"\r\n                href={navigation_button.link}\r\n              >\r\n                {navigation_button.label}\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className=\"order-1 ml-auto flex items-center md:order-2 lg:ml-0\">\r\n          {settings.search && (\r\n            <Link\r\n              className=\"mr-5 inline-block border-r border-border pr-5 text-xl text-dark hover:text-primary dark:border-darkmode-border dark:text-white\"\r\n              href={`/search`}\r\n              aria-label=\"search\"\r\n            >\r\n              <IoSearch />\r\n            </Link>\r\n          )}\r\n          <ThemeSwitcher className=\"mr-5\" />\r\n\r\n          {/* {navigation_button.enable && (\r\n            <Link\r\n              className=\"btn btn-outline-primary btn-sm hidden lg:inline-block\"\r\n              href={navigation_button.link}\r\n            >\r\n              {curlanguage.changeLanguage.value == \"en\"\r\n                ? navigation_button.labelEn\r\n                : navigation_button.label}\r\n            </Link>\r\n          )} */}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\PageHeader.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\PostSidebar.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\Providers.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\SeoMeta.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\partials\\Testimonials.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\Search.tsx",[],["730"],"G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Accordion.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\all.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Button.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Notice.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Tab.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Tabs.tsx",[],["731"],"G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Video.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\layouts\\shortcodes\\Youtube.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\contentParser.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\createData.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\loadData.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\loginAuth.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\mongodb.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\taxonomyParser.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\updateData.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\dateFormat.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\readingTime.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\similarItems.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\sortFunctions.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\taxonomyFilter.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\textConverter.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\lib\\utils\\use-scroll.ts",[],[],"G:\\vercel\\lpc_landingpage\\src\\models\\banner.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\models\\company.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\models\\contact.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\models\\customer.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\models\\message.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\models\\new.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\models\\partner.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\models\\product.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\models\\user.js",[],[],"G:\\vercel\\lpc_landingpage\\src\\store\\store.tsx",[],[],"G:\\vercel\\lpc_landingpage\\src\\types\\index.d.ts",[],[],{"ruleId":"732","severity":1,"message":"733","line":34,"column":6,"nodeType":"734","endLine":34,"endColumn":8,"suggestions":"735"},{"ruleId":"732","severity":1,"message":"736","line":134,"column":6,"nodeType":"734","endLine":134,"endColumn":12,"suggestions":"737"},{"ruleId":"732","severity":1,"message":"738","line":50,"column":6,"nodeType":"734","endLine":50,"endColumn":8,"suggestions":"739"},{"ruleId":"732","severity":1,"message":"740","line":71,"column":6,"nodeType":"734","endLine":71,"endColumn":29,"suggestions":"741"},{"ruleId":"732","severity":1,"message":"742","line":34,"column":18,"nodeType":"743","endLine":36,"endColumn":12},{"ruleId":"732","severity":1,"message":"744","line":74,"column":6,"nodeType":"734","endLine":74,"endColumn":12,"suggestions":"745"},{"ruleId":"732","severity":1,"message":"742","line":44,"column":18,"nodeType":"743","endLine":53,"endColumn":14},{"ruleId":"732","severity":1,"message":"746","line":28,"column":6,"nodeType":"734","endLine":28,"endColumn":15,"suggestions":"747","suppressions":"748"},{"ruleId":"732","severity":1,"message":"749","line":28,"column":6,"nodeType":"734","endLine":28,"endColumn":8,"suggestions":"750"},{"ruleId":"732","severity":1,"message":"751","line":28,"column":6,"nodeType":"734","endLine":28,"endColumn":8,"suggestions":"752"},{"ruleId":"732","severity":1,"message":"753","line":57,"column":6,"nodeType":"734","endLine":57,"endColumn":8,"suggestions":"754"},{"ruleId":"732","severity":1,"message":"755","line":32,"column":26,"nodeType":"756","endLine":34,"endColumn":15},{"ruleId":"732","severity":1,"message":"757","line":29,"column":26,"nodeType":"743","endLine":31,"endColumn":12},{"ruleId":"732","severity":1,"message":"757","line":30,"column":26,"nodeType":"743","endLine":32,"endColumn":12},{"ruleId":"732","severity":1,"message":"733","line":29,"column":6,"nodeType":"734","endLine":29,"endColumn":8,"suggestions":"758"},{"ruleId":"732","severity":1,"message":"759","line":26,"column":25,"nodeType":"743","endLine":26,"endColumn":80},{"ruleId":"732","severity":1,"message":"759","line":26,"column":25,"nodeType":"743","endLine":26,"endColumn":80},{"ruleId":"732","severity":1,"message":"760","line":30,"column":25,"nodeType":"743","endLine":30,"endColumn":80},{"ruleId":"761","severity":1,"message":"762","line":17,"column":5,"nodeType":"763","endLine":23,"endColumn":7,"suppressions":"764"},{"ruleId":"732","severity":1,"message":"765","line":38,"column":24,"nodeType":"743","endLine":40,"endColumn":10},{"ruleId":"732","severity":1,"message":"766","line":92,"column":6,"nodeType":"734","endLine":92,"endColumn":16,"suggestions":"767","suppressions":"768"},{"ruleId":"732","severity":1,"message":"769","line":26,"column":6,"nodeType":"734","endLine":26,"endColumn":14,"suggestions":"770","suppressions":"771"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'newList.length'. Either include them or remove the dependency array.","ArrayExpression",["772"],"React Hook useEffect has missing dependencies: 'dispatch', 'params.single', 'posts', and 'router'. Either include them or remove the dependency array.",["773"],"React Hook useEffect has missing dependencies: 'dispatch' and 'products'. Either include them or remove the dependency array.",["774"],"React Hook useEffect has missing dependencies: 'params.id', 'products', and 'router'. Either include them or remove the dependency array.",["775"],"Assignments to the 'data' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'dispatch', 'params.id', 'products.length', 'router', and 'solution'. Either include them or remove the dependency array.",["776"],"React Hook useEffect has missing dependencies: 'loadItems' and 'loadPerClick'. Either include them or remove the dependency array.",["777"],["778"],"React Hook useEffect has a missing dependency: 'messageData.length'. Either include it or remove the dependency array.",["779"],"React Hook useEffect has a missing dependency: 'partnerData.length'. Either include it or remove the dependency array.",["780"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["781"],"Assignments to the 'companyDatas' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'customerList' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["782"],"Assignments to the 'partnerList' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'serviceList' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["783"],"Assignments to the 'servicesMenu' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'fuse'. Either include it or remove the dependency array.",["784"],["785"],"React Hook useEffect has a missing dependency: 'defaultFocus'. Either include it or remove the dependency array.",["786"],["787"],{"desc":"788","fix":"789"},{"desc":"790","fix":"791"},{"desc":"792","fix":"793"},{"desc":"794","fix":"795"},{"desc":"796","fix":"797"},{"desc":"798","fix":"799"},{"kind":"800","justification":"801"},{"desc":"802","fix":"803"},{"desc":"804","fix":"805"},{"desc":"806","fix":"807"},{"desc":"788","fix":"808"},{"kind":"800","justification":"801"},{"desc":"809","fix":"810"},{"kind":"800","justification":"801"},{"desc":"811","fix":"812"},{"kind":"800","justification":"801"},"Update the dependencies array to be: [dispatch, newList.length]",{"range":"813","text":"814"},"Update the dependencies array to be: [data, dispatch, params.single, posts, router]",{"range":"815","text":"816"},"Update the dependencies array to be: [dispatch, products]",{"range":"817","text":"818"},"Update the dependencies array to be: [params.id, products, router, setData, setIsLoading]",{"range":"819","text":"820"},"Update the dependencies array to be: [data, dispatch, params.id, products.length, router, solution]",{"range":"821","text":"822"},"Update the dependencies array to be: [loadItems, loadPerClick, mounted]",{"range":"823","text":"824"},"directive","","Update the dependencies array to be: [messageData.length]",{"range":"825","text":"826"},"Update the dependencies array to be: [partnerData.length]",{"range":"827","text":"828"},"Update the dependencies array to be: [dispatch]",{"range":"829","text":"830"},{"range":"831","text":"814"},"Update the dependencies array to be: [fuse, inputVal]",{"range":"832","text":"833"},"Update the dependencies array to be: [active, defaultFocus]",{"range":"834","text":"835"},[1260,1262],"[dispatch, newList.length]",[3466,3472],"[data, dispatch, params.single, posts, router]",[1845,1847],"[dispatch, products]",[2656,2679],"[params.id, products, router, setData, setIsLoading]",[2696,2702],"[data, dispatch, params.id, products.length, router, solution]",[870,879],"[loadItems, loadPerClick, mounted]",[679,681],"[messageData.length]",[689,691],"[partnerData.length]",[1433,1435],"[dispatch]",[1082,1084],[2931,2941],"[fuse, inputVal]",[609,617],"[active, defaultFocus]"]